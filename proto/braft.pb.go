// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/ofgp/ofgp-core/proto/braft.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import crypto "github.com/ofgp/ofgp-core/crypto"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CodeType int32

const (
	CodeType_SIGNED   CodeType = 0
	CodeType_NEEDSYNC CodeType = 1
	CodeType_REJECT   CodeType = 2
)

var CodeType_name = map[int32]string{
	0: "SIGNED",
	1: "NEEDSYNC",
	2: "REJECT",
}
var CodeType_value = map[string]int32{
	"SIGNED":   0,
	"NEEDSYNC": 1,
	"REJECT":   2,
}

func (x CodeType) String() string {
	return proto.EnumName(CodeType_name, int32(x))
}
func (CodeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{0}
}

type TxStatus int32

const (
	TxStatus_WAITING   TxStatus = 0
	TxStatus_COMMITTED TxStatus = 1
	TxStatus_REJECTED  TxStatus = 2
)

var TxStatus_name = map[int32]string{
	0: "WAITING",
	1: "COMMITTED",
	2: "REJECTED",
}
var TxStatus_value = map[string]int32{
	"WAITING":   0,
	"COMMITTED": 1,
	"REJECTED":  2,
}

func (x TxStatus) String() string {
	return proto.EnumName(TxStatus_name, int32(x))
}
func (TxStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{1}
}

type Reconfig_Type int32

const (
	Reconfig_JOIN  Reconfig_Type = 0
	Reconfig_LEAVE Reconfig_Type = 1
)

var Reconfig_Type_name = map[int32]string{
	0: "JOIN",
	1: "LEAVE",
}
var Reconfig_Type_value = map[string]int32{
	"JOIN":  0,
	"LEAVE": 1,
}

func (x Reconfig_Type) String() string {
	return proto.EnumName(Reconfig_Type_name, int32(x))
}
func (Reconfig_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{16, 0}
}

type Block_Type int32

const (
	Block_UNKNOWN  Block_Type = 0
	Block_GENESIS  Block_Type = 1
	Block_TXS      Block_Type = 2
	Block_BCH      Block_Type = 3
	Block_RECONFIG Block_Type = 4
)

var Block_Type_name = map[int32]string{
	0: "UNKNOWN",
	1: "GENESIS",
	2: "TXS",
	3: "BCH",
	4: "RECONFIG",
}
var Block_Type_value = map[string]int32{
	"UNKNOWN":  0,
	"GENESIS":  1,
	"TXS":      2,
	"BCH":      3,
	"RECONFIG": 4,
}

func (x Block_Type) String() string {
	return proto.EnumName(Block_Type_name, int32(x))
}
func (Block_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{17, 0}
}

type EchoRequest struct {
	Nonce                int32    `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EchoRequest) Reset()         { *m = EchoRequest{} }
func (m *EchoRequest) String() string { return proto.CompactTextString(m) }
func (*EchoRequest) ProtoMessage()    {}
func (*EchoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{0}
}
func (m *EchoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoRequest.Unmarshal(m, b)
}
func (m *EchoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoRequest.Marshal(b, m, deterministic)
}
func (dst *EchoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoRequest.Merge(dst, src)
}
func (m *EchoRequest) XXX_Size() int {
	return xxx_messageInfo_EchoRequest.Size(m)
}
func (m *EchoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EchoRequest proto.InternalMessageInfo

func (m *EchoRequest) GetNonce() int32 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

type EchoResponse struct {
	Nonce                int32    `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EchoResponse) Reset()         { *m = EchoResponse{} }
func (m *EchoResponse) String() string { return proto.CompactTextString(m) }
func (*EchoResponse) ProtoMessage()    {}
func (*EchoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{1}
}
func (m *EchoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoResponse.Unmarshal(m, b)
}
func (m *EchoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoResponse.Marshal(b, m, deterministic)
}
func (dst *EchoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoResponse.Merge(dst, src)
}
func (m *EchoResponse) XXX_Size() int {
	return xxx_messageInfo_EchoResponse.Size(m)
}
func (m *EchoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EchoResponse proto.InternalMessageInfo

func (m *EchoResponse) GetNonce() int32 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

type SyncUpRequest struct {
	BaseHeight           int64    `protobuf:"varint,1,opt,name=base_height,json=baseHeight,proto3" json:"base_height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncUpRequest) Reset()         { *m = SyncUpRequest{} }
func (m *SyncUpRequest) String() string { return proto.CompactTextString(m) }
func (*SyncUpRequest) ProtoMessage()    {}
func (*SyncUpRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{2}
}
func (m *SyncUpRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncUpRequest.Unmarshal(m, b)
}
func (m *SyncUpRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncUpRequest.Marshal(b, m, deterministic)
}
func (dst *SyncUpRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncUpRequest.Merge(dst, src)
}
func (m *SyncUpRequest) XXX_Size() int {
	return xxx_messageInfo_SyncUpRequest.Size(m)
}
func (m *SyncUpRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncUpRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SyncUpRequest proto.InternalMessageInfo

func (m *SyncUpRequest) GetBaseHeight() int64 {
	if m != nil {
		return m.BaseHeight
	}
	return 0
}

type SyncUpByHashRequest struct {
	Locator              []*crypto.Digest256 `protobuf:"bytes,1,rep,name=locator,proto3" json:"locator,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SyncUpByHashRequest) Reset()         { *m = SyncUpByHashRequest{} }
func (m *SyncUpByHashRequest) String() string { return proto.CompactTextString(m) }
func (*SyncUpByHashRequest) ProtoMessage()    {}
func (*SyncUpByHashRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{3}
}
func (m *SyncUpByHashRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncUpByHashRequest.Unmarshal(m, b)
}
func (m *SyncUpByHashRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncUpByHashRequest.Marshal(b, m, deterministic)
}
func (dst *SyncUpByHashRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncUpByHashRequest.Merge(dst, src)
}
func (m *SyncUpByHashRequest) XXX_Size() int {
	return xxx_messageInfo_SyncUpByHashRequest.Size(m)
}
func (m *SyncUpByHashRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncUpByHashRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SyncUpByHashRequest proto.InternalMessageInfo

func (m *SyncUpByHashRequest) GetLocator() []*crypto.Digest256 {
	if m != nil {
		return m.Locator
	}
	return nil
}

type SyncUpResponse struct {
	Commits []*BlockPack `protobuf:"bytes,1,rep,name=commits,proto3" json:"commits,omitempty"`
	// if {more} is true, {fresh} and {strong_accuse} are nils
	Fresh                *BlockPack    `protobuf:"bytes,2,opt,name=fresh,proto3" json:"fresh,omitempty"`
	StrongAccuse         *StrongAccuse `protobuf:"bytes,3,opt,name=strong_accuse,json=strongAccuse,proto3" json:"strong_accuse,omitempty"`
	More                 bool          `protobuf:"varint,4,opt,name=more,proto3" json:"more,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SyncUpResponse) Reset()         { *m = SyncUpResponse{} }
func (m *SyncUpResponse) String() string { return proto.CompactTextString(m) }
func (*SyncUpResponse) ProtoMessage()    {}
func (*SyncUpResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{4}
}
func (m *SyncUpResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncUpResponse.Unmarshal(m, b)
}
func (m *SyncUpResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncUpResponse.Marshal(b, m, deterministic)
}
func (dst *SyncUpResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncUpResponse.Merge(dst, src)
}
func (m *SyncUpResponse) XXX_Size() int {
	return xxx_messageInfo_SyncUpResponse.Size(m)
}
func (m *SyncUpResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncUpResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SyncUpResponse proto.InternalMessageInfo

func (m *SyncUpResponse) GetCommits() []*BlockPack {
	if m != nil {
		return m.Commits
	}
	return nil
}

func (m *SyncUpResponse) GetFresh() *BlockPack {
	if m != nil {
		return m.Fresh
	}
	return nil
}

func (m *SyncUpResponse) GetStrongAccuse() *StrongAccuse {
	if m != nil {
		return m.StrongAccuse
	}
	return nil
}

func (m *SyncUpResponse) GetMore() bool {
	if m != nil {
		return m.More
	}
	return false
}

type Void struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Void) Reset()         { *m = Void{} }
func (m *Void) String() string { return proto.CompactTextString(m) }
func (*Void) ProtoMessage()    {}
func (*Void) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{5}
}
func (m *Void) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Void.Unmarshal(m, b)
}
func (m *Void) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Void.Marshal(b, m, deterministic)
}
func (dst *Void) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Void.Merge(dst, src)
}
func (m *Void) XXX_Size() int {
	return xxx_messageInfo_Void.Size(m)
}
func (m *Void) XXX_DiscardUnknown() {
	xxx_messageInfo_Void.DiscardUnknown(m)
}

var xxx_messageInfo_Void proto.InternalMessageInfo

type BchBlockHeader struct {
	Height               int32             `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	BlockId              *crypto.Digest256 `protobuf:"bytes,2,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	PrevId               *crypto.Digest256 `protobuf:"bytes,3,opt,name=prev_id,json=prevId,proto3" json:"prev_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *BchBlockHeader) Reset()         { *m = BchBlockHeader{} }
func (m *BchBlockHeader) String() string { return proto.CompactTextString(m) }
func (*BchBlockHeader) ProtoMessage()    {}
func (*BchBlockHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{6}
}
func (m *BchBlockHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BchBlockHeader.Unmarshal(m, b)
}
func (m *BchBlockHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BchBlockHeader.Marshal(b, m, deterministic)
}
func (dst *BchBlockHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BchBlockHeader.Merge(dst, src)
}
func (m *BchBlockHeader) XXX_Size() int {
	return xxx_messageInfo_BchBlockHeader.Size(m)
}
func (m *BchBlockHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_BchBlockHeader.DiscardUnknown(m)
}

var xxx_messageInfo_BchBlockHeader proto.InternalMessageInfo

func (m *BchBlockHeader) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *BchBlockHeader) GetBlockId() *crypto.Digest256 {
	if m != nil {
		return m.BlockId
	}
	return nil
}

func (m *BchBlockHeader) GetPrevId() *crypto.Digest256 {
	if m != nil {
		return m.PrevId
	}
	return nil
}

// AddressInfo 充值到侧链的地址和金额或者提币到主链的地址和金额
type AddressInfo struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Amount               int64    `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddressInfo) Reset()         { *m = AddressInfo{} }
func (m *AddressInfo) String() string { return proto.CompactTextString(m) }
func (*AddressInfo) ProtoMessage()    {}
func (*AddressInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{7}
}
func (m *AddressInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressInfo.Unmarshal(m, b)
}
func (m *AddressInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressInfo.Marshal(b, m, deterministic)
}
func (dst *AddressInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressInfo.Merge(dst, src)
}
func (m *AddressInfo) XXX_Size() int {
	return xxx_messageInfo_AddressInfo.Size(m)
}
func (m *AddressInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AddressInfo proto.InternalMessageInfo

func (m *AddressInfo) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *AddressInfo) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

// watcher监听到的event
type WatchedEvent struct {
	Business             string   `protobuf:"bytes,1,opt,name=business,proto3" json:"business,omitempty"`
	EventType            uint32   `protobuf:"varint,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	TxID                 string   `protobuf:"bytes,3,opt,name=tx_i_d,json=txID,proto3" json:"tx_i_d,omitempty"`
	Amount               uint64   `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Fee                  uint64   `protobuf:"fixed64,5,opt,name=fee,proto3" json:"fee,omitempty"`
	From                 uint32   `protobuf:"varint,6,opt,name=from,proto3" json:"from,omitempty"`
	To                   uint32   `protobuf:"varint,7,opt,name=to,proto3" json:"to,omitempty"`
	Data                 []byte   `protobuf:"bytes,8,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchedEvent) Reset()         { *m = WatchedEvent{} }
func (m *WatchedEvent) String() string { return proto.CompactTextString(m) }
func (*WatchedEvent) ProtoMessage()    {}
func (*WatchedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{8}
}
func (m *WatchedEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchedEvent.Unmarshal(m, b)
}
func (m *WatchedEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchedEvent.Marshal(b, m, deterministic)
}
func (dst *WatchedEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchedEvent.Merge(dst, src)
}
func (m *WatchedEvent) XXX_Size() int {
	return xxx_messageInfo_WatchedEvent.Size(m)
}
func (m *WatchedEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchedEvent.DiscardUnknown(m)
}

var xxx_messageInfo_WatchedEvent proto.InternalMessageInfo

func (m *WatchedEvent) GetBusiness() string {
	if m != nil {
		return m.Business
	}
	return ""
}

func (m *WatchedEvent) GetEventType() uint32 {
	if m != nil {
		return m.EventType
	}
	return 0
}

func (m *WatchedEvent) GetTxID() string {
	if m != nil {
		return m.TxID
	}
	return ""
}

func (m *WatchedEvent) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *WatchedEvent) GetFee() uint64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *WatchedEvent) GetFrom() uint32 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *WatchedEvent) GetTo() uint32 {
	if m != nil {
		return m.To
	}
	return 0
}

func (m *WatchedEvent) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// watcher监测到的主/侧链交易信息
type WatchedTxInfo struct {
	Txid         string         `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Amount       int64          `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	RechargeList []*AddressInfo `protobuf:"bytes,3,rep,name=recharge_list,json=rechargeList,proto3" json:"recharge_list,omitempty"`
	// 发起交易的链的名称，例如"bch"
	From string `protobuf:"bytes,4,opt,name=from,proto3" json:"from,omitempty"`
	// 目标链的名称，例如"eth"
	To string `protobuf:"bytes,5,opt,name=to,proto3" json:"to,omitempty"`
	// BTC/BCH的矿工费
	Fee int64 `protobuf:"varint,6,opt,name=fee,proto3" json:"fee,omitempty"`
	// from的token类型
	TokenFrom uint32 `protobuf:"varint,7,opt,name=token_from,json=tokenFrom,proto3" json:"token_from,omitempty"`
	// to的token类型
	TokenTo              uint32   `protobuf:"varint,8,opt,name=token_to,json=tokenTo,proto3" json:"token_to,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchedTxInfo) Reset()         { *m = WatchedTxInfo{} }
func (m *WatchedTxInfo) String() string { return proto.CompactTextString(m) }
func (*WatchedTxInfo) ProtoMessage()    {}
func (*WatchedTxInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{9}
}
func (m *WatchedTxInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchedTxInfo.Unmarshal(m, b)
}
func (m *WatchedTxInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchedTxInfo.Marshal(b, m, deterministic)
}
func (dst *WatchedTxInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchedTxInfo.Merge(dst, src)
}
func (m *WatchedTxInfo) XXX_Size() int {
	return xxx_messageInfo_WatchedTxInfo.Size(m)
}
func (m *WatchedTxInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchedTxInfo.DiscardUnknown(m)
}

var xxx_messageInfo_WatchedTxInfo proto.InternalMessageInfo

func (m *WatchedTxInfo) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

func (m *WatchedTxInfo) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *WatchedTxInfo) GetRechargeList() []*AddressInfo {
	if m != nil {
		return m.RechargeList
	}
	return nil
}

func (m *WatchedTxInfo) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *WatchedTxInfo) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *WatchedTxInfo) GetFee() int64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *WatchedTxInfo) GetTokenFrom() uint32 {
	if m != nil {
		return m.TokenFrom
	}
	return 0
}

func (m *WatchedTxInfo) GetTokenTo() uint32 {
	if m != nil {
		return m.TokenTo
	}
	return 0
}

// 网关在主/侧链上新发起的交易
type NewlyTx struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewlyTx) Reset()         { *m = NewlyTx{} }
func (m *NewlyTx) String() string { return proto.CompactTextString(m) }
func (*NewlyTx) ProtoMessage()    {}
func (*NewlyTx) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{10}
}
func (m *NewlyTx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewlyTx.Unmarshal(m, b)
}
func (m *NewlyTx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewlyTx.Marshal(b, m, deterministic)
}
func (dst *NewlyTx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewlyTx.Merge(dst, src)
}
func (m *NewlyTx) XXX_Size() int {
	return xxx_messageInfo_NewlyTx.Size(m)
}
func (m *NewlyTx) XXX_DiscardUnknown() {
	xxx_messageInfo_NewlyTx.DiscardUnknown(m)
}

var xxx_messageInfo_NewlyTx proto.InternalMessageInfo

func (m *NewlyTx) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type PublicTx struct {
	Chain                uint32   `protobuf:"varint,1,opt,name=chain,proto3" json:"chain,omitempty"`
	TxID                 string   `protobuf:"bytes,2,opt,name=tx_i_d,json=txID,proto3" json:"tx_i_d,omitempty"`
	Amount               int64    `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Data                 []byte   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublicTx) Reset()         { *m = PublicTx{} }
func (m *PublicTx) String() string { return proto.CompactTextString(m) }
func (*PublicTx) ProtoMessage()    {}
func (*PublicTx) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{11}
}
func (m *PublicTx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicTx.Unmarshal(m, b)
}
func (m *PublicTx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicTx.Marshal(b, m, deterministic)
}
func (dst *PublicTx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicTx.Merge(dst, src)
}
func (m *PublicTx) XXX_Size() int {
	return xxx_messageInfo_PublicTx.Size(m)
}
func (m *PublicTx) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicTx.DiscardUnknown(m)
}

var xxx_messageInfo_PublicTx proto.InternalMessageInfo

func (m *PublicTx) GetChain() uint32 {
	if m != nil {
		return m.Chain
	}
	return 0
}

func (m *PublicTx) GetTxID() string {
	if m != nil {
		return m.TxID
	}
	return ""
}

func (m *PublicTx) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *PublicTx) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Transaction struct {
	TxID                 *crypto.Digest256 `protobuf:"bytes,1,opt,name=tx_i_d,json=txID,proto3" json:"tx_i_d,omitempty"`
	Business             string            `protobuf:"bytes,2,opt,name=business,proto3" json:"business,omitempty"`
	Vin                  []*PublicTx       `protobuf:"bytes,3,rep,name=vin,proto3" json:"vin,omitempty"`
	Vout                 []*PublicTx       `protobuf:"bytes,4,rep,name=vout,proto3" json:"vout,omitempty"`
	Time                 int64             `protobuf:"varint,5,opt,name=time,proto3" json:"time,omitempty"`
	Data                 []byte            `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{12}
}
func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (dst *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(dst, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetTxID() *crypto.Digest256 {
	if m != nil {
		return m.TxID
	}
	return nil
}

func (m *Transaction) GetBusiness() string {
	if m != nil {
		return m.Business
	}
	return ""
}

func (m *Transaction) GetVin() []*PublicTx {
	if m != nil {
		return m.Vin
	}
	return nil
}

func (m *Transaction) GetVout() []*PublicTx {
	if m != nil {
		return m.Vout
	}
	return nil
}

func (m *Transaction) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Transaction) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type TransactionOld struct {
	Id                   *crypto.Digest256 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	WatchedTx            *WatchedTxInfo    `protobuf:"bytes,2,opt,name=watched_tx,json=watchedTx,proto3" json:"watched_tx,omitempty"`
	NewlyTxId            string            `protobuf:"bytes,3,opt,name=newly_tx_id,json=newlyTxId,proto3" json:"newly_tx_id,omitempty"`
	Time                 int64             `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TransactionOld) Reset()         { *m = TransactionOld{} }
func (m *TransactionOld) String() string { return proto.CompactTextString(m) }
func (*TransactionOld) ProtoMessage()    {}
func (*TransactionOld) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{13}
}
func (m *TransactionOld) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionOld.Unmarshal(m, b)
}
func (m *TransactionOld) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionOld.Marshal(b, m, deterministic)
}
func (dst *TransactionOld) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionOld.Merge(dst, src)
}
func (m *TransactionOld) XXX_Size() int {
	return xxx_messageInfo_TransactionOld.Size(m)
}
func (m *TransactionOld) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionOld.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionOld proto.InternalMessageInfo

func (m *TransactionOld) GetId() *crypto.Digest256 {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TransactionOld) GetWatchedTx() *WatchedTxInfo {
	if m != nil {
		return m.WatchedTx
	}
	return nil
}

func (m *TransactionOld) GetNewlyTxId() string {
	if m != nil {
		return m.NewlyTxId
	}
	return ""
}

func (m *TransactionOld) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

type Transactions struct {
	Txs                  []*Transaction `protobuf:"bytes,1,rep,name=txs,proto3" json:"txs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Transactions) Reset()         { *m = Transactions{} }
func (m *Transactions) String() string { return proto.CompactTextString(m) }
func (*Transactions) ProtoMessage()    {}
func (*Transactions) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{14}
}
func (m *Transactions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transactions.Unmarshal(m, b)
}
func (m *Transactions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transactions.Marshal(b, m, deterministic)
}
func (dst *Transactions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transactions.Merge(dst, src)
}
func (m *Transactions) XXX_Size() int {
	return xxx_messageInfo_Transactions.Size(m)
}
func (m *Transactions) XXX_DiscardUnknown() {
	xxx_messageInfo_Transactions.DiscardUnknown(m)
}

var xxx_messageInfo_Transactions proto.InternalMessageInfo

func (m *Transactions) GetTxs() []*Transaction {
	if m != nil {
		return m.Txs
	}
	return nil
}

// TxLoopupEntry 保存了tx的存储位置信息，哪一个区块里面的第几笔交易
type TxLookupEntry struct {
	Height               int64    `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Index                int32    `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxLookupEntry) Reset()         { *m = TxLookupEntry{} }
func (m *TxLookupEntry) String() string { return proto.CompactTextString(m) }
func (*TxLookupEntry) ProtoMessage()    {}
func (*TxLookupEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{15}
}
func (m *TxLookupEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxLookupEntry.Unmarshal(m, b)
}
func (m *TxLookupEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxLookupEntry.Marshal(b, m, deterministic)
}
func (dst *TxLookupEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxLookupEntry.Merge(dst, src)
}
func (m *TxLookupEntry) XXX_Size() int {
	return xxx_messageInfo_TxLookupEntry.Size(m)
}
func (m *TxLookupEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_TxLookupEntry.DiscardUnknown(m)
}

var xxx_messageInfo_TxLookupEntry proto.InternalMessageInfo

func (m *TxLookupEntry) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *TxLookupEntry) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type Reconfig struct {
	Type                 Reconfig_Type `protobuf:"varint,1,opt,name=type,proto3,enum=proto.Reconfig_Type" json:"type,omitempty"`
	Host                 string        `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	NodeId               int32         `protobuf:"varint,3,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Reconfig) Reset()         { *m = Reconfig{} }
func (m *Reconfig) String() string { return proto.CompactTextString(m) }
func (*Reconfig) ProtoMessage()    {}
func (*Reconfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{16}
}
func (m *Reconfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reconfig.Unmarshal(m, b)
}
func (m *Reconfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reconfig.Marshal(b, m, deterministic)
}
func (dst *Reconfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reconfig.Merge(dst, src)
}
func (m *Reconfig) XXX_Size() int {
	return xxx_messageInfo_Reconfig.Size(m)
}
func (m *Reconfig) XXX_DiscardUnknown() {
	xxx_messageInfo_Reconfig.DiscardUnknown(m)
}

var xxx_messageInfo_Reconfig proto.InternalMessageInfo

func (m *Reconfig) GetType() Reconfig_Type {
	if m != nil {
		return m.Type
	}
	return Reconfig_JOIN
}

func (m *Reconfig) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Reconfig) GetNodeId() int32 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

type Block struct {
	TimestampMs          int64             `protobuf:"varint,1,opt,name=timestampMs,proto3" json:"timestampMs,omitempty"`
	PrevBlockId          *crypto.Digest256 `protobuf:"bytes,2,opt,name=prev_block_id,json=prevBlockId,proto3" json:"prev_block_id,omitempty"`
	Type                 Block_Type        `protobuf:"varint,3,opt,name=type,proto3,enum=proto.Block_Type" json:"type,omitempty"`
	TxOlds               []*TransactionOld `protobuf:"bytes,4,rep,name=tx_olds,json=txOlds,proto3" json:"tx_olds,omitempty"`
	BchBlockHeader       *BchBlockHeader   `protobuf:"bytes,5,opt,name=bch_block_header,json=bchBlockHeader,proto3" json:"bch_block_header,omitempty"`
	Reconfig             *Reconfig         `protobuf:"bytes,6,opt,name=reconfig,proto3" json:"reconfig,omitempty"`
	Id                   *crypto.Digest256 `protobuf:"bytes,7,opt,name=id,proto3" json:"id,omitempty"`
	Txs                  []*Transaction    `protobuf:"bytes,8,rep,name=txs,proto3" json:"txs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{17}
}
func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (dst *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(dst, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetTimestampMs() int64 {
	if m != nil {
		return m.TimestampMs
	}
	return 0
}

func (m *Block) GetPrevBlockId() *crypto.Digest256 {
	if m != nil {
		return m.PrevBlockId
	}
	return nil
}

func (m *Block) GetType() Block_Type {
	if m != nil {
		return m.Type
	}
	return Block_UNKNOWN
}

func (m *Block) GetTxOlds() []*TransactionOld {
	if m != nil {
		return m.TxOlds
	}
	return nil
}

func (m *Block) GetBchBlockHeader() *BchBlockHeader {
	if m != nil {
		return m.BchBlockHeader
	}
	return nil
}

func (m *Block) GetReconfig() *Reconfig {
	if m != nil {
		return m.Reconfig
	}
	return nil
}

func (m *Block) GetId() *crypto.Digest256 {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Block) GetTxs() []*Transaction {
	if m != nil {
		return m.Txs
	}
	return nil
}

type BlockInfo struct {
	Term                 int64             `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Height               int64             `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	BlockId              *crypto.Digest256 `protobuf:"bytes,3,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	Block                *Block            `protobuf:"bytes,4,opt,name=block,proto3" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *BlockInfo) Reset()         { *m = BlockInfo{} }
func (m *BlockInfo) String() string { return proto.CompactTextString(m) }
func (*BlockInfo) ProtoMessage()    {}
func (*BlockInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{18}
}
func (m *BlockInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockInfo.Unmarshal(m, b)
}
func (m *BlockInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockInfo.Marshal(b, m, deterministic)
}
func (dst *BlockInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockInfo.Merge(dst, src)
}
func (m *BlockInfo) XXX_Size() int {
	return xxx_messageInfo_BlockInfo.Size(m)
}
func (m *BlockInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BlockInfo proto.InternalMessageInfo

func (m *BlockInfo) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *BlockInfo) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *BlockInfo) GetBlockId() *crypto.Digest256 {
	if m != nil {
		return m.BlockId
	}
	return nil
}

func (m *BlockInfo) GetBlock() *Block {
	if m != nil {
		return m.Block
	}
	return nil
}

type BlockPack struct {
	Init *InitMsg `protobuf:"bytes,1,opt,name=init,proto3" json:"init,omitempty"`
	// Key is nodeid, must match {init}'s term, height and block_id
	Prepares map[int32]*PrepareMsg `protobuf:"bytes,2,rep,name=prepares,proto3" json:"prepares,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Key is nodeid, must match {init}'s term, height and block_id
	Commits              map[int32]*CommitMsg `protobuf:"bytes,3,rep,name=commits,proto3" json:"commits,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *BlockPack) Reset()         { *m = BlockPack{} }
func (m *BlockPack) String() string { return proto.CompactTextString(m) }
func (*BlockPack) ProtoMessage()    {}
func (*BlockPack) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{19}
}
func (m *BlockPack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockPack.Unmarshal(m, b)
}
func (m *BlockPack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockPack.Marshal(b, m, deterministic)
}
func (dst *BlockPack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockPack.Merge(dst, src)
}
func (m *BlockPack) XXX_Size() int {
	return xxx_messageInfo_BlockPack.Size(m)
}
func (m *BlockPack) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockPack.DiscardUnknown(m)
}

var xxx_messageInfo_BlockPack proto.InternalMessageInfo

func (m *BlockPack) GetInit() *InitMsg {
	if m != nil {
		return m.Init
	}
	return nil
}

func (m *BlockPack) GetPrepares() map[int32]*PrepareMsg {
	if m != nil {
		return m.Prepares
	}
	return nil
}

func (m *BlockPack) GetCommits() map[int32]*CommitMsg {
	if m != nil {
		return m.Commits
	}
	return nil
}

type Votie struct {
	Term                 int64                 `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Height               int64                 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Block                *Block                `protobuf:"bytes,3,opt,name=block,proto3" json:"block,omitempty"`
	Prepares             map[int32]*PrepareMsg `protobuf:"bytes,4,rep,name=prepares,proto3" json:"prepares,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Commits              map[int32]*CommitMsg  `protobuf:"bytes,5,rep,name=commits,proto3" json:"commits,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Votie) Reset()         { *m = Votie{} }
func (m *Votie) String() string { return proto.CompactTextString(m) }
func (*Votie) ProtoMessage()    {}
func (*Votie) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{20}
}
func (m *Votie) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Votie.Unmarshal(m, b)
}
func (m *Votie) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Votie.Marshal(b, m, deterministic)
}
func (dst *Votie) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Votie.Merge(dst, src)
}
func (m *Votie) XXX_Size() int {
	return xxx_messageInfo_Votie.Size(m)
}
func (m *Votie) XXX_DiscardUnknown() {
	xxx_messageInfo_Votie.DiscardUnknown(m)
}

var xxx_messageInfo_Votie proto.InternalMessageInfo

func (m *Votie) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *Votie) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Votie) GetBlock() *Block {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *Votie) GetPrepares() map[int32]*PrepareMsg {
	if m != nil {
		return m.Prepares
	}
	return nil
}

func (m *Votie) GetCommits() map[int32]*CommitMsg {
	if m != nil {
		return m.Commits
	}
	return nil
}

type Vote struct {
	Term                 int64    `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Votie                *Votie   `protobuf:"bytes,2,opt,name=votie,proto3" json:"votie,omitempty"`
	NodeId               int32    `protobuf:"varint,3,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Sig                  []byte   `protobuf:"bytes,4,opt,name=sig,proto3" json:"sig,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vote) Reset()         { *m = Vote{} }
func (m *Vote) String() string { return proto.CompactTextString(m) }
func (*Vote) ProtoMessage()    {}
func (*Vote) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{21}
}
func (m *Vote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vote.Unmarshal(m, b)
}
func (m *Vote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vote.Marshal(b, m, deterministic)
}
func (dst *Vote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vote.Merge(dst, src)
}
func (m *Vote) XXX_Size() int {
	return xxx_messageInfo_Vote.Size(m)
}
func (m *Vote) XXX_DiscardUnknown() {
	xxx_messageInfo_Vote.DiscardUnknown(m)
}

var xxx_messageInfo_Vote proto.InternalMessageInfo

func (m *Vote) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *Vote) GetVotie() *Votie {
	if m != nil {
		return m.Votie
	}
	return nil
}

func (m *Vote) GetNodeId() int32 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

func (m *Vote) GetSig() []byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

// InitMsgId = Hash("InitMsg", term, height, block_id, node_id, voteid)
type InitMsg struct {
	Term   int64  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Height int64  `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Block  *Block `protobuf:"bytes,3,opt,name=block,proto3" json:"block,omitempty"`
	NodeId int32  `protobuf:"varint,4,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Sig    []byte `protobuf:"bytes,5,opt,name=sig,proto3" json:"sig,omitempty"`
	// only needed when the previous block has a lower term
	Votes                map[int32]*Vote `protobuf:"bytes,6,rep,name=votes,proto3" json:"votes,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *InitMsg) Reset()         { *m = InitMsg{} }
func (m *InitMsg) String() string { return proto.CompactTextString(m) }
func (*InitMsg) ProtoMessage()    {}
func (*InitMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{22}
}
func (m *InitMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitMsg.Unmarshal(m, b)
}
func (m *InitMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitMsg.Marshal(b, m, deterministic)
}
func (dst *InitMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitMsg.Merge(dst, src)
}
func (m *InitMsg) XXX_Size() int {
	return xxx_messageInfo_InitMsg.Size(m)
}
func (m *InitMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_InitMsg.DiscardUnknown(m)
}

var xxx_messageInfo_InitMsg proto.InternalMessageInfo

func (m *InitMsg) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *InitMsg) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *InitMsg) GetBlock() *Block {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *InitMsg) GetNodeId() int32 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

func (m *InitMsg) GetSig() []byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

func (m *InitMsg) GetVotes() map[int32]*Vote {
	if m != nil {
		return m.Votes
	}
	return nil
}

// PrepareMsgId = Hash("PrepareMsg", term, height, block_id, node_id)
type PrepareMsg struct {
	Term                 int64             `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Height               int64             `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	BlockId              *crypto.Digest256 `protobuf:"bytes,3,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	NodeId               int32             `protobuf:"varint,4,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Sig                  []byte            `protobuf:"bytes,5,opt,name=sig,proto3" json:"sig,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PrepareMsg) Reset()         { *m = PrepareMsg{} }
func (m *PrepareMsg) String() string { return proto.CompactTextString(m) }
func (*PrepareMsg) ProtoMessage()    {}
func (*PrepareMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{23}
}
func (m *PrepareMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrepareMsg.Unmarshal(m, b)
}
func (m *PrepareMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrepareMsg.Marshal(b, m, deterministic)
}
func (dst *PrepareMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrepareMsg.Merge(dst, src)
}
func (m *PrepareMsg) XXX_Size() int {
	return xxx_messageInfo_PrepareMsg.Size(m)
}
func (m *PrepareMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_PrepareMsg.DiscardUnknown(m)
}

var xxx_messageInfo_PrepareMsg proto.InternalMessageInfo

func (m *PrepareMsg) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *PrepareMsg) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *PrepareMsg) GetBlockId() *crypto.Digest256 {
	if m != nil {
		return m.BlockId
	}
	return nil
}

func (m *PrepareMsg) GetNodeId() int32 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

func (m *PrepareMsg) GetSig() []byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

// CommitMsgId = Hash("CommitMsg", term, height, block_id, node_id)
type CommitMsg struct {
	Term                 int64             `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Height               int64             `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	BlockId              *crypto.Digest256 `protobuf:"bytes,3,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	NodeId               int32             `protobuf:"varint,4,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Sig                  []byte            `protobuf:"bytes,5,opt,name=sig,proto3" json:"sig,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CommitMsg) Reset()         { *m = CommitMsg{} }
func (m *CommitMsg) String() string { return proto.CompactTextString(m) }
func (*CommitMsg) ProtoMessage()    {}
func (*CommitMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{24}
}
func (m *CommitMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitMsg.Unmarshal(m, b)
}
func (m *CommitMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitMsg.Marshal(b, m, deterministic)
}
func (dst *CommitMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitMsg.Merge(dst, src)
}
func (m *CommitMsg) XXX_Size() int {
	return xxx_messageInfo_CommitMsg.Size(m)
}
func (m *CommitMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CommitMsg proto.InternalMessageInfo

func (m *CommitMsg) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *CommitMsg) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *CommitMsg) GetBlockId() *crypto.Digest256 {
	if m != nil {
		return m.BlockId
	}
	return nil
}

func (m *CommitMsg) GetNodeId() int32 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

func (m *CommitMsg) GetSig() []byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

// WeakAccuseId = Hash("WeakAccuse", term, node_id)
type WeakAccuse struct {
	Term                 int64    `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	NodeId               int32    `protobuf:"varint,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Sig                  []byte   `protobuf:"bytes,3,opt,name=sig,proto3" json:"sig,omitempty"`
	Time                 int64    `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WeakAccuse) Reset()         { *m = WeakAccuse{} }
func (m *WeakAccuse) String() string { return proto.CompactTextString(m) }
func (*WeakAccuse) ProtoMessage()    {}
func (*WeakAccuse) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{25}
}
func (m *WeakAccuse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WeakAccuse.Unmarshal(m, b)
}
func (m *WeakAccuse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WeakAccuse.Marshal(b, m, deterministic)
}
func (dst *WeakAccuse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WeakAccuse.Merge(dst, src)
}
func (m *WeakAccuse) XXX_Size() int {
	return xxx_messageInfo_WeakAccuse.Size(m)
}
func (m *WeakAccuse) XXX_DiscardUnknown() {
	xxx_messageInfo_WeakAccuse.DiscardUnknown(m)
}

var xxx_messageInfo_WeakAccuse proto.InternalMessageInfo

func (m *WeakAccuse) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *WeakAccuse) GetNodeId() int32 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

func (m *WeakAccuse) GetSig() []byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

func (m *WeakAccuse) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

type WeakAccuses struct {
	Accuses              map[int32]*WeakAccuse `protobuf:"bytes,1,rep,name=accuses,proto3" json:"accuses,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *WeakAccuses) Reset()         { *m = WeakAccuses{} }
func (m *WeakAccuses) String() string { return proto.CompactTextString(m) }
func (*WeakAccuses) ProtoMessage()    {}
func (*WeakAccuses) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{26}
}
func (m *WeakAccuses) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WeakAccuses.Unmarshal(m, b)
}
func (m *WeakAccuses) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WeakAccuses.Marshal(b, m, deterministic)
}
func (dst *WeakAccuses) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WeakAccuses.Merge(dst, src)
}
func (m *WeakAccuses) XXX_Size() int {
	return xxx_messageInfo_WeakAccuses.Size(m)
}
func (m *WeakAccuses) XXX_DiscardUnknown() {
	xxx_messageInfo_WeakAccuses.DiscardUnknown(m)
}

var xxx_messageInfo_WeakAccuses proto.InternalMessageInfo

func (m *WeakAccuses) GetAccuses() map[int32]*WeakAccuse {
	if m != nil {
		return m.Accuses
	}
	return nil
}

// a strong accuse has at least f+1 weak accuses
type StrongAccuse struct {
	WeakAccuses          map[int32]*WeakAccuse `protobuf:"bytes,1,rep,name=weak_accuses,json=weakAccuses,proto3" json:"weak_accuses,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *StrongAccuse) Reset()         { *m = StrongAccuse{} }
func (m *StrongAccuse) String() string { return proto.CompactTextString(m) }
func (*StrongAccuse) ProtoMessage()    {}
func (*StrongAccuse) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{27}
}
func (m *StrongAccuse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StrongAccuse.Unmarshal(m, b)
}
func (m *StrongAccuse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StrongAccuse.Marshal(b, m, deterministic)
}
func (dst *StrongAccuse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StrongAccuse.Merge(dst, src)
}
func (m *StrongAccuse) XXX_Size() int {
	return xxx_messageInfo_StrongAccuse.Size(m)
}
func (m *StrongAccuse) XXX_DiscardUnknown() {
	xxx_messageInfo_StrongAccuse.DiscardUnknown(m)
}

var xxx_messageInfo_StrongAccuse proto.InternalMessageInfo

func (m *StrongAccuse) GetWeakAccuses() map[int32]*WeakAccuse {
	if m != nil {
		return m.WeakAccuses
	}
	return nil
}

// 签名请求
type SignRequest struct {
	Term                 int64         `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	NodeId               int32         `protobuf:"varint,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	MultisigAddress      string        `protobuf:"bytes,3,opt,name=multisig_address,json=multisigAddress,proto3" json:"multisig_address,omitempty"`
	WatchedEvent         *WatchedEvent `protobuf:"bytes,4,opt,name=watched_event,json=watchedEvent,proto3" json:"watched_event,omitempty"`
	NewlyTx              *NewlyTx      `protobuf:"bytes,5,opt,name=newly_tx,json=newlyTx,proto3" json:"newly_tx,omitempty"`
	Sig                  []byte        `protobuf:"bytes,6,opt,name=sig,proto3" json:"sig,omitempty"`
	Business             string        `protobuf:"bytes,7,opt,name=business,proto3" json:"business,omitempty"`
	Time                 int64         `protobuf:"varint,8,opt,name=time,proto3" json:"time,omitempty"`
	Recharge             []byte        `protobuf:"bytes,9,opt,name=recharge,proto3" json:"recharge,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SignRequest) Reset()         { *m = SignRequest{} }
func (m *SignRequest) String() string { return proto.CompactTextString(m) }
func (*SignRequest) ProtoMessage()    {}
func (*SignRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{28}
}
func (m *SignRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignRequest.Unmarshal(m, b)
}
func (m *SignRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignRequest.Marshal(b, m, deterministic)
}
func (dst *SignRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignRequest.Merge(dst, src)
}
func (m *SignRequest) XXX_Size() int {
	return xxx_messageInfo_SignRequest.Size(m)
}
func (m *SignRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignRequest proto.InternalMessageInfo

func (m *SignRequest) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *SignRequest) GetNodeId() int32 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

func (m *SignRequest) GetMultisigAddress() string {
	if m != nil {
		return m.MultisigAddress
	}
	return ""
}

func (m *SignRequest) GetWatchedEvent() *WatchedEvent {
	if m != nil {
		return m.WatchedEvent
	}
	return nil
}

func (m *SignRequest) GetNewlyTx() *NewlyTx {
	if m != nil {
		return m.NewlyTx
	}
	return nil
}

func (m *SignRequest) GetSig() []byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

func (m *SignRequest) GetBusiness() string {
	if m != nil {
		return m.Business
	}
	return ""
}

func (m *SignRequest) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *SignRequest) GetRecharge() []byte {
	if m != nil {
		return m.Recharge
	}
	return nil
}

// 签名结果
type SignResult struct {
	Business             string   `protobuf:"bytes,1,opt,name=business,proto3" json:"business,omitempty"`
	Code                 CodeType `protobuf:"varint,2,opt,name=code,proto3,enum=proto.CodeType" json:"code,omitempty"`
	NodeID               int32    `protobuf:"varint,3,opt,name=node_i_d,json=nodeID,proto3" json:"node_i_d,omitempty"`
	ScTxID               string   `protobuf:"bytes,4,opt,name=sc_tx_i_d,json=scTxID,proto3" json:"sc_tx_i_d,omitempty"`
	To                   uint32   `protobuf:"varint,5,opt,name=to,proto3" json:"to,omitempty"`
	Term                 int64    `protobuf:"varint,6,opt,name=term,proto3" json:"term,omitempty"`
	Data                 [][]byte `protobuf:"bytes,7,rep,name=data,proto3" json:"data,omitempty"`
	Sig                  []byte   `protobuf:"bytes,8,opt,name=sig,proto3" json:"sig,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignResult) Reset()         { *m = SignResult{} }
func (m *SignResult) String() string { return proto.CompactTextString(m) }
func (*SignResult) ProtoMessage()    {}
func (*SignResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{29}
}
func (m *SignResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignResult.Unmarshal(m, b)
}
func (m *SignResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignResult.Marshal(b, m, deterministic)
}
func (dst *SignResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignResult.Merge(dst, src)
}
func (m *SignResult) XXX_Size() int {
	return xxx_messageInfo_SignResult.Size(m)
}
func (m *SignResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SignResult.DiscardUnknown(m)
}

var xxx_messageInfo_SignResult proto.InternalMessageInfo

func (m *SignResult) GetBusiness() string {
	if m != nil {
		return m.Business
	}
	return ""
}

func (m *SignResult) GetCode() CodeType {
	if m != nil {
		return m.Code
	}
	return CodeType_SIGNED
}

func (m *SignResult) GetNodeID() int32 {
	if m != nil {
		return m.NodeID
	}
	return 0
}

func (m *SignResult) GetScTxID() string {
	if m != nil {
		return m.ScTxID
	}
	return ""
}

func (m *SignResult) GetTo() uint32 {
	if m != nil {
		return m.To
	}
	return 0
}

func (m *SignResult) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *SignResult) GetData() [][]byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SignResult) GetSig() []byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

type SignTxResponse struct {
	Code                 CodeType `protobuf:"varint,1,opt,name=code,proto3,enum=proto.CodeType" json:"code,omitempty"`
	NodeId               int32    `protobuf:"varint,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Sig                  [][]byte `protobuf:"bytes,3,rep,name=sig,proto3" json:"sig,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignTxResponse) Reset()         { *m = SignTxResponse{} }
func (m *SignTxResponse) String() string { return proto.CompactTextString(m) }
func (*SignTxResponse) ProtoMessage()    {}
func (*SignTxResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{30}
}
func (m *SignTxResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignTxResponse.Unmarshal(m, b)
}
func (m *SignTxResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignTxResponse.Marshal(b, m, deterministic)
}
func (dst *SignTxResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignTxResponse.Merge(dst, src)
}
func (m *SignTxResponse) XXX_Size() int {
	return xxx_messageInfo_SignTxResponse.Size(m)
}
func (m *SignTxResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SignTxResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SignTxResponse proto.InternalMessageInfo

func (m *SignTxResponse) GetCode() CodeType {
	if m != nil {
		return m.Code
	}
	return CodeType_SIGNED
}

func (m *SignTxResponse) GetNodeId() int32 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

func (m *SignTxResponse) GetSig() [][]byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

type SignedResult struct {
	Code                 CodeType `protobuf:"varint,1,opt,name=code,proto3,enum=proto.CodeType" json:"code,omitempty"`
	NodeId               int32    `protobuf:"varint,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	TxId                 string   `protobuf:"bytes,3,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	To                   string   `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	Term                 int64    `protobuf:"varint,5,opt,name=term,proto3" json:"term,omitempty"`
	Data                 [][]byte `protobuf:"bytes,6,rep,name=data,proto3" json:"data,omitempty"`
	Sig                  []byte   `protobuf:"bytes,7,opt,name=sig,proto3" json:"sig,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignedResult) Reset()         { *m = SignedResult{} }
func (m *SignedResult) String() string { return proto.CompactTextString(m) }
func (*SignedResult) ProtoMessage()    {}
func (*SignedResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{31}
}
func (m *SignedResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedResult.Unmarshal(m, b)
}
func (m *SignedResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedResult.Marshal(b, m, deterministic)
}
func (dst *SignedResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedResult.Merge(dst, src)
}
func (m *SignedResult) XXX_Size() int {
	return xxx_messageInfo_SignedResult.Size(m)
}
func (m *SignedResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedResult.DiscardUnknown(m)
}

var xxx_messageInfo_SignedResult proto.InternalMessageInfo

func (m *SignedResult) GetCode() CodeType {
	if m != nil {
		return m.Code
	}
	return CodeType_SIGNED
}

func (m *SignedResult) GetNodeId() int32 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

func (m *SignedResult) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *SignedResult) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *SignedResult) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *SignedResult) GetData() [][]byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SignedResult) GetSig() []byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

type SignedStatistic struct {
	SignedMsgId          string             `protobuf:"bytes,1,opt,name=SignedMsgId,proto3" json:"SignedMsgId,omitempty"`
	Stat                 map[int32]CodeType `protobuf:"bytes,2,rep,name=stat,proto3" json:"stat,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=proto.CodeType"`
	Status               TxStatus           `protobuf:"varint,3,opt,name=status,proto3,enum=proto.TxStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SignedStatistic) Reset()         { *m = SignedStatistic{} }
func (m *SignedStatistic) String() string { return proto.CompactTextString(m) }
func (*SignedStatistic) ProtoMessage()    {}
func (*SignedStatistic) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{32}
}
func (m *SignedStatistic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedStatistic.Unmarshal(m, b)
}
func (m *SignedStatistic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedStatistic.Marshal(b, m, deterministic)
}
func (dst *SignedStatistic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedStatistic.Merge(dst, src)
}
func (m *SignedStatistic) XXX_Size() int {
	return xxx_messageInfo_SignedStatistic.Size(m)
}
func (m *SignedStatistic) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedStatistic.DiscardUnknown(m)
}

var xxx_messageInfo_SignedStatistic proto.InternalMessageInfo

func (m *SignedStatistic) GetSignedMsgId() string {
	if m != nil {
		return m.SignedMsgId
	}
	return ""
}

func (m *SignedStatistic) GetStat() map[int32]CodeType {
	if m != nil {
		return m.Stat
	}
	return nil
}

func (m *SignedStatistic) GetStatus() TxStatus {
	if m != nil {
		return m.Status
	}
	return TxStatus_WAITING
}

type ChainTxIdMsg struct {
	NodeId               int32    `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	TxId                 string   `protobuf:"bytes,2,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	SignMsgId            string   `protobuf:"bytes,3,opt,name=sign_msg_id,json=signMsgId,proto3" json:"sign_msg_id,omitempty"`
	Sig                  []byte   `protobuf:"bytes,4,opt,name=sig,proto3" json:"sig,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChainTxIdMsg) Reset()         { *m = ChainTxIdMsg{} }
func (m *ChainTxIdMsg) String() string { return proto.CompactTextString(m) }
func (*ChainTxIdMsg) ProtoMessage()    {}
func (*ChainTxIdMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{33}
}
func (m *ChainTxIdMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChainTxIdMsg.Unmarshal(m, b)
}
func (m *ChainTxIdMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChainTxIdMsg.Marshal(b, m, deterministic)
}
func (dst *ChainTxIdMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChainTxIdMsg.Merge(dst, src)
}
func (m *ChainTxIdMsg) XXX_Size() int {
	return xxx_messageInfo_ChainTxIdMsg.Size(m)
}
func (m *ChainTxIdMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_ChainTxIdMsg.DiscardUnknown(m)
}

var xxx_messageInfo_ChainTxIdMsg proto.InternalMessageInfo

func (m *ChainTxIdMsg) GetNodeId() int32 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

func (m *ChainTxIdMsg) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *ChainTxIdMsg) GetSignMsgId() string {
	if m != nil {
		return m.SignMsgId
	}
	return ""
}

func (m *ChainTxIdMsg) GetSig() []byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

type JoinRequest struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Pubkey               string   `protobuf:"bytes,2,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Vote                 *Vote    `protobuf:"bytes,3,opt,name=vote,proto3" json:"vote,omitempty"`
	Sig                  []byte   `protobuf:"bytes,4,opt,name=sig,proto3" json:"sig,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinRequest) Reset()         { *m = JoinRequest{} }
func (m *JoinRequest) String() string { return proto.CompactTextString(m) }
func (*JoinRequest) ProtoMessage()    {}
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{34}
}
func (m *JoinRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinRequest.Unmarshal(m, b)
}
func (m *JoinRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinRequest.Marshal(b, m, deterministic)
}
func (dst *JoinRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinRequest.Merge(dst, src)
}
func (m *JoinRequest) XXX_Size() int {
	return xxx_messageInfo_JoinRequest.Size(m)
}
func (m *JoinRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JoinRequest proto.InternalMessageInfo

func (m *JoinRequest) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *JoinRequest) GetPubkey() string {
	if m != nil {
		return m.Pubkey
	}
	return ""
}

func (m *JoinRequest) GetVote() *Vote {
	if m != nil {
		return m.Vote
	}
	return nil
}

func (m *JoinRequest) GetSig() []byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

type JoinResponse struct {
	NodeID               int32    `protobuf:"varint,1,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	Synced               bool     `protobuf:"varint,2,opt,name=synced,proto3" json:"synced,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinResponse) Reset()         { *m = JoinResponse{} }
func (m *JoinResponse) String() string { return proto.CompactTextString(m) }
func (*JoinResponse) ProtoMessage()    {}
func (*JoinResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{35}
}
func (m *JoinResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinResponse.Unmarshal(m, b)
}
func (m *JoinResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinResponse.Marshal(b, m, deterministic)
}
func (dst *JoinResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinResponse.Merge(dst, src)
}
func (m *JoinResponse) XXX_Size() int {
	return xxx_messageInfo_JoinResponse.Size(m)
}
func (m *JoinResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinResponse.DiscardUnknown(m)
}

var xxx_messageInfo_JoinResponse proto.InternalMessageInfo

func (m *JoinResponse) GetNodeID() int32 {
	if m != nil {
		return m.NodeID
	}
	return 0
}

func (m *JoinResponse) GetSynced() bool {
	if m != nil {
		return m.Synced
	}
	return false
}

type LeaveRequest struct {
	NodeId               int32    `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Sig                  []byte   `protobuf:"bytes,3,opt,name=sig,proto3" json:"sig,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeaveRequest) Reset()         { *m = LeaveRequest{} }
func (m *LeaveRequest) String() string { return proto.CompactTextString(m) }
func (*LeaveRequest) ProtoMessage()    {}
func (*LeaveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{36}
}
func (m *LeaveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeaveRequest.Unmarshal(m, b)
}
func (m *LeaveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeaveRequest.Marshal(b, m, deterministic)
}
func (dst *LeaveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeaveRequest.Merge(dst, src)
}
func (m *LeaveRequest) XXX_Size() int {
	return xxx_messageInfo_LeaveRequest.Size(m)
}
func (m *LeaveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LeaveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LeaveRequest proto.InternalMessageInfo

func (m *LeaveRequest) GetNodeId() int32 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

func (m *LeaveRequest) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *LeaveRequest) GetSig() []byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

type NodeInfo struct {
	NodeId               int32    `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Pubkey               string   `protobuf:"bytes,3,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Host                 string   `protobuf:"bytes,4,opt,name=host,proto3" json:"host,omitempty"`
	IsNormal             bool     `protobuf:"varint,5,opt,name=is_normal,json=isNormal,proto3" json:"is_normal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeInfo) Reset()         { *m = NodeInfo{} }
func (m *NodeInfo) String() string { return proto.CompactTextString(m) }
func (*NodeInfo) ProtoMessage()    {}
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{37}
}
func (m *NodeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeInfo.Unmarshal(m, b)
}
func (m *NodeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeInfo.Marshal(b, m, deterministic)
}
func (dst *NodeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeInfo.Merge(dst, src)
}
func (m *NodeInfo) XXX_Size() int {
	return xxx_messageInfo_NodeInfo.Size(m)
}
func (m *NodeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_NodeInfo proto.InternalMessageInfo

func (m *NodeInfo) GetNodeId() int32 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

func (m *NodeInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NodeInfo) GetPubkey() string {
	if m != nil {
		return m.Pubkey
	}
	return ""
}

func (m *NodeInfo) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *NodeInfo) GetIsNormal() bool {
	if m != nil {
		return m.IsNormal
	}
	return false
}

type MultiSigInfo struct {
	BtcAddress           string   `protobuf:"bytes,1,opt,name=btc_address,json=btcAddress,proto3" json:"btc_address,omitempty"`
	BtcRedeemScript      []byte   `protobuf:"bytes,2,opt,name=btc_redeem_script,json=btcRedeemScript,proto3" json:"btc_redeem_script,omitempty"`
	BchAddress           string   `protobuf:"bytes,3,opt,name=bch_address,json=bchAddress,proto3" json:"bch_address,omitempty"`
	BchRedeemScript      []byte   `protobuf:"bytes,4,opt,name=bch_redeem_script,json=bchRedeemScript,proto3" json:"bch_redeem_script,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MultiSigInfo) Reset()         { *m = MultiSigInfo{} }
func (m *MultiSigInfo) String() string { return proto.CompactTextString(m) }
func (*MultiSigInfo) ProtoMessage()    {}
func (*MultiSigInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{38}
}
func (m *MultiSigInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiSigInfo.Unmarshal(m, b)
}
func (m *MultiSigInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiSigInfo.Marshal(b, m, deterministic)
}
func (dst *MultiSigInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiSigInfo.Merge(dst, src)
}
func (m *MultiSigInfo) XXX_Size() int {
	return xxx_messageInfo_MultiSigInfo.Size(m)
}
func (m *MultiSigInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiSigInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MultiSigInfo proto.InternalMessageInfo

func (m *MultiSigInfo) GetBtcAddress() string {
	if m != nil {
		return m.BtcAddress
	}
	return ""
}

func (m *MultiSigInfo) GetBtcRedeemScript() []byte {
	if m != nil {
		return m.BtcRedeemScript
	}
	return nil
}

func (m *MultiSigInfo) GetBchAddress() string {
	if m != nil {
		return m.BchAddress
	}
	return ""
}

func (m *MultiSigInfo) GetBchRedeemScript() []byte {
	if m != nil {
		return m.BchRedeemScript
	}
	return nil
}

type NodeList struct {
	NodeList             []*NodeInfo     `protobuf:"bytes,1,rep,name=node_list,json=nodeList,proto3" json:"node_list,omitempty"`
	MultiSigInfoList     []*MultiSigInfo `protobuf:"bytes,2,rep,name=multi_sig_info_list,json=multiSigInfoList,proto3" json:"multi_sig_info_list,omitempty"`
	LeaderId             int32           `protobuf:"varint,3,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
	QuorumN              int32           `protobuf:"varint,4,opt,name=quorum_n,json=quorumN,proto3" json:"quorum_n,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *NodeList) Reset()         { *m = NodeList{} }
func (m *NodeList) String() string { return proto.CompactTextString(m) }
func (*NodeList) ProtoMessage()    {}
func (*NodeList) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{39}
}
func (m *NodeList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeList.Unmarshal(m, b)
}
func (m *NodeList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeList.Marshal(b, m, deterministic)
}
func (dst *NodeList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeList.Merge(dst, src)
}
func (m *NodeList) XXX_Size() int {
	return xxx_messageInfo_NodeList.Size(m)
}
func (m *NodeList) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeList.DiscardUnknown(m)
}

var xxx_messageInfo_NodeList proto.InternalMessageInfo

func (m *NodeList) GetNodeList() []*NodeInfo {
	if m != nil {
		return m.NodeList
	}
	return nil
}

func (m *NodeList) GetMultiSigInfoList() []*MultiSigInfo {
	if m != nil {
		return m.MultiSigInfoList
	}
	return nil
}

func (m *NodeList) GetLeaderId() int32 {
	if m != nil {
		return m.LeaderId
	}
	return 0
}

func (m *NodeList) GetQuorumN() int32 {
	if m != nil {
		return m.QuorumN
	}
	return 0
}

type AccuseRecord struct {
	Term     int64 `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	LocalId  int32 `protobuf:"varint,2,opt,name=local_id,json=localId,proto3" json:"local_id,omitempty"`
	LeaderId int32 `protobuf:"varint,3,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
	// accuse_type: accuse类型，1表示weak，2表示strong
	AccuseType           int32    `protobuf:"varint,4,opt,name=accuse_type,json=accuseType,proto3" json:"accuse_type,omitempty"`
	Timestamp            int64    `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Reason               string   `protobuf:"bytes,6,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccuseRecord) Reset()         { *m = AccuseRecord{} }
func (m *AccuseRecord) String() string { return proto.CompactTextString(m) }
func (*AccuseRecord) ProtoMessage()    {}
func (*AccuseRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{40}
}
func (m *AccuseRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccuseRecord.Unmarshal(m, b)
}
func (m *AccuseRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccuseRecord.Marshal(b, m, deterministic)
}
func (dst *AccuseRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccuseRecord.Merge(dst, src)
}
func (m *AccuseRecord) XXX_Size() int {
	return xxx_messageInfo_AccuseRecord.Size(m)
}
func (m *AccuseRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_AccuseRecord.DiscardUnknown(m)
}

var xxx_messageInfo_AccuseRecord proto.InternalMessageInfo

func (m *AccuseRecord) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *AccuseRecord) GetLocalId() int32 {
	if m != nil {
		return m.LocalId
	}
	return 0
}

func (m *AccuseRecord) GetLeaderId() int32 {
	if m != nil {
		return m.LeaderId
	}
	return 0
}

func (m *AccuseRecord) GetAccuseType() int32 {
	if m != nil {
		return m.AccuseType
	}
	return 0
}

func (m *AccuseRecord) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *AccuseRecord) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type IsCommitedResponse struct {
	Commited             bool     `protobuf:"varint,1,opt,name=commited,proto3" json:"commited,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsCommitedResponse) Reset()         { *m = IsCommitedResponse{} }
func (m *IsCommitedResponse) String() string { return proto.CompactTextString(m) }
func (*IsCommitedResponse) ProtoMessage()    {}
func (*IsCommitedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{41}
}
func (m *IsCommitedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsCommitedResponse.Unmarshal(m, b)
}
func (m *IsCommitedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsCommitedResponse.Marshal(b, m, deterministic)
}
func (dst *IsCommitedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsCommitedResponse.Merge(dst, src)
}
func (m *IsCommitedResponse) XXX_Size() int {
	return xxx_messageInfo_IsCommitedResponse.Size(m)
}
func (m *IsCommitedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IsCommitedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IsCommitedResponse proto.InternalMessageInfo

func (m *IsCommitedResponse) GetCommited() bool {
	if m != nil {
		return m.Commited
	}
	return false
}

type NodeRuntimeInfo struct {
	NodeID               int32    `protobuf:"varint,1,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	BtcHeight            int64    `protobuf:"varint,2,opt,name=btcHeight,proto3" json:"btcHeight,omitempty"`
	BchHeight            int64    `protobuf:"varint,3,opt,name=bchHeight,proto3" json:"bchHeight,omitempty"`
	EthHeight            int64    `protobuf:"varint,4,opt,name=ethHeight,proto3" json:"ethHeight,omitempty"`
	LeaderCnt            int32    `protobuf:"varint,5,opt,name=leaderCnt,proto3" json:"leaderCnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeRuntimeInfo) Reset()         { *m = NodeRuntimeInfo{} }
func (m *NodeRuntimeInfo) String() string { return proto.CompactTextString(m) }
func (*NodeRuntimeInfo) ProtoMessage()    {}
func (*NodeRuntimeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{42}
}
func (m *NodeRuntimeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeRuntimeInfo.Unmarshal(m, b)
}
func (m *NodeRuntimeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeRuntimeInfo.Marshal(b, m, deterministic)
}
func (dst *NodeRuntimeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeRuntimeInfo.Merge(dst, src)
}
func (m *NodeRuntimeInfo) XXX_Size() int {
	return xxx_messageInfo_NodeRuntimeInfo.Size(m)
}
func (m *NodeRuntimeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeRuntimeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_NodeRuntimeInfo proto.InternalMessageInfo

func (m *NodeRuntimeInfo) GetNodeID() int32 {
	if m != nil {
		return m.NodeID
	}
	return 0
}

func (m *NodeRuntimeInfo) GetBtcHeight() int64 {
	if m != nil {
		return m.BtcHeight
	}
	return 0
}

func (m *NodeRuntimeInfo) GetBchHeight() int64 {
	if m != nil {
		return m.BchHeight
	}
	return 0
}

func (m *NodeRuntimeInfo) GetEthHeight() int64 {
	if m != nil {
		return m.EthHeight
	}
	return 0
}

func (m *NodeRuntimeInfo) GetLeaderCnt() int32 {
	if m != nil {
		return m.LeaderCnt
	}
	return 0
}

type BtcRecharge struct {
	Addr                 []byte   `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Amount               int64    `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BtcRecharge) Reset()         { *m = BtcRecharge{} }
func (m *BtcRecharge) String() string { return proto.CompactTextString(m) }
func (*BtcRecharge) ProtoMessage()    {}
func (*BtcRecharge) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{43}
}
func (m *BtcRecharge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BtcRecharge.Unmarshal(m, b)
}
func (m *BtcRecharge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BtcRecharge.Marshal(b, m, deterministic)
}
func (dst *BtcRecharge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BtcRecharge.Merge(dst, src)
}
func (m *BtcRecharge) XXX_Size() int {
	return xxx_messageInfo_BtcRecharge.Size(m)
}
func (m *BtcRecharge) XXX_DiscardUnknown() {
	xxx_messageInfo_BtcRecharge.DiscardUnknown(m)
}

var xxx_messageInfo_BtcRecharge proto.InternalMessageInfo

func (m *BtcRecharge) GetAddr() []byte {
	if m != nil {
		return m.Addr
	}
	return nil
}

func (m *BtcRecharge) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type EthRecharge struct {
	Addr                 []byte   `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Amount               int64    `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	TokenTo              uint32   `protobuf:"varint,3,opt,name=token_to,json=tokenTo,proto3" json:"token_to,omitempty"`
	Method               string   `protobuf:"bytes,4,opt,name=method,proto3" json:"method,omitempty"`
	Proposal             string   `protobuf:"bytes,5,opt,name=proposal,proto3" json:"proposal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EthRecharge) Reset()         { *m = EthRecharge{} }
func (m *EthRecharge) String() string { return proto.CompactTextString(m) }
func (*EthRecharge) ProtoMessage()    {}
func (*EthRecharge) Descriptor() ([]byte, []int) {
	return fileDescriptor_braft_82ca4c9bdc79a242, []int{44}
}
func (m *EthRecharge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EthRecharge.Unmarshal(m, b)
}
func (m *EthRecharge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EthRecharge.Marshal(b, m, deterministic)
}
func (dst *EthRecharge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EthRecharge.Merge(dst, src)
}
func (m *EthRecharge) XXX_Size() int {
	return xxx_messageInfo_EthRecharge.Size(m)
}
func (m *EthRecharge) XXX_DiscardUnknown() {
	xxx_messageInfo_EthRecharge.DiscardUnknown(m)
}

var xxx_messageInfo_EthRecharge proto.InternalMessageInfo

func (m *EthRecharge) GetAddr() []byte {
	if m != nil {
		return m.Addr
	}
	return nil
}

func (m *EthRecharge) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *EthRecharge) GetTokenTo() uint32 {
	if m != nil {
		return m.TokenTo
	}
	return 0
}

func (m *EthRecharge) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *EthRecharge) GetProposal() string {
	if m != nil {
		return m.Proposal
	}
	return ""
}

func init() {
	proto.RegisterType((*EchoRequest)(nil), "proto.EchoRequest")
	proto.RegisterType((*EchoResponse)(nil), "proto.EchoResponse")
	proto.RegisterType((*SyncUpRequest)(nil), "proto.SyncUpRequest")
	proto.RegisterType((*SyncUpByHashRequest)(nil), "proto.SyncUpByHashRequest")
	proto.RegisterType((*SyncUpResponse)(nil), "proto.SyncUpResponse")
	proto.RegisterType((*Void)(nil), "proto.Void")
	proto.RegisterType((*BchBlockHeader)(nil), "proto.BchBlockHeader")
	proto.RegisterType((*AddressInfo)(nil), "proto.AddressInfo")
	proto.RegisterType((*WatchedEvent)(nil), "proto.WatchedEvent")
	proto.RegisterType((*WatchedTxInfo)(nil), "proto.WatchedTxInfo")
	proto.RegisterType((*NewlyTx)(nil), "proto.NewlyTx")
	proto.RegisterType((*PublicTx)(nil), "proto.PublicTx")
	proto.RegisterType((*Transaction)(nil), "proto.Transaction")
	proto.RegisterType((*TransactionOld)(nil), "proto.TransactionOld")
	proto.RegisterType((*Transactions)(nil), "proto.Transactions")
	proto.RegisterType((*TxLookupEntry)(nil), "proto.TxLookupEntry")
	proto.RegisterType((*Reconfig)(nil), "proto.Reconfig")
	proto.RegisterType((*Block)(nil), "proto.Block")
	proto.RegisterType((*BlockInfo)(nil), "proto.BlockInfo")
	proto.RegisterType((*BlockPack)(nil), "proto.BlockPack")
	proto.RegisterMapType((map[int32]*CommitMsg)(nil), "proto.BlockPack.CommitsEntry")
	proto.RegisterMapType((map[int32]*PrepareMsg)(nil), "proto.BlockPack.PreparesEntry")
	proto.RegisterType((*Votie)(nil), "proto.Votie")
	proto.RegisterMapType((map[int32]*CommitMsg)(nil), "proto.Votie.CommitsEntry")
	proto.RegisterMapType((map[int32]*PrepareMsg)(nil), "proto.Votie.PreparesEntry")
	proto.RegisterType((*Vote)(nil), "proto.Vote")
	proto.RegisterType((*InitMsg)(nil), "proto.InitMsg")
	proto.RegisterMapType((map[int32]*Vote)(nil), "proto.InitMsg.VotesEntry")
	proto.RegisterType((*PrepareMsg)(nil), "proto.PrepareMsg")
	proto.RegisterType((*CommitMsg)(nil), "proto.CommitMsg")
	proto.RegisterType((*WeakAccuse)(nil), "proto.WeakAccuse")
	proto.RegisterType((*WeakAccuses)(nil), "proto.WeakAccuses")
	proto.RegisterMapType((map[int32]*WeakAccuse)(nil), "proto.WeakAccuses.AccusesEntry")
	proto.RegisterType((*StrongAccuse)(nil), "proto.StrongAccuse")
	proto.RegisterMapType((map[int32]*WeakAccuse)(nil), "proto.StrongAccuse.WeakAccusesEntry")
	proto.RegisterType((*SignRequest)(nil), "proto.SignRequest")
	proto.RegisterType((*SignResult)(nil), "proto.SignResult")
	proto.RegisterType((*SignTxResponse)(nil), "proto.SignTxResponse")
	proto.RegisterType((*SignedResult)(nil), "proto.SignedResult")
	proto.RegisterType((*SignedStatistic)(nil), "proto.SignedStatistic")
	proto.RegisterMapType((map[int32]CodeType)(nil), "proto.SignedStatistic.StatEntry")
	proto.RegisterType((*ChainTxIdMsg)(nil), "proto.ChainTxIdMsg")
	proto.RegisterType((*JoinRequest)(nil), "proto.JoinRequest")
	proto.RegisterType((*JoinResponse)(nil), "proto.JoinResponse")
	proto.RegisterType((*LeaveRequest)(nil), "proto.LeaveRequest")
	proto.RegisterType((*NodeInfo)(nil), "proto.NodeInfo")
	proto.RegisterType((*MultiSigInfo)(nil), "proto.MultiSigInfo")
	proto.RegisterType((*NodeList)(nil), "proto.NodeList")
	proto.RegisterType((*AccuseRecord)(nil), "proto.AccuseRecord")
	proto.RegisterType((*IsCommitedResponse)(nil), "proto.IsCommitedResponse")
	proto.RegisterType((*NodeRuntimeInfo)(nil), "proto.NodeRuntimeInfo")
	proto.RegisterType((*BtcRecharge)(nil), "proto.BtcRecharge")
	proto.RegisterType((*EthRecharge)(nil), "proto.EthRecharge")
	proto.RegisterEnum("proto.CodeType", CodeType_name, CodeType_value)
	proto.RegisterEnum("proto.TxStatus", TxStatus_name, TxStatus_value)
	proto.RegisterEnum("proto.Reconfig_Type", Reconfig_Type_name, Reconfig_Type_value)
	proto.RegisterEnum("proto.Block_Type", Block_Type_name, Block_Type_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BraftClient is the client API for Braft service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BraftClient interface {
	// just for testing
	Echo(ctx context.Context, in *EchoRequest, opts ...grpc.CallOption) (*EchoResponse, error)
	// Among core nodes in the cluster
	SyncUp(ctx context.Context, in *SyncUpRequest, opts ...grpc.CallOption) (*SyncUpResponse, error)
	NotifyInitMsg(ctx context.Context, in *InitMsg, opts ...grpc.CallOption) (*Void, error)
	NotifyPrepareMsg(ctx context.Context, in *PrepareMsg, opts ...grpc.CallOption) (*Void, error)
	NotifyCommitMsg(ctx context.Context, in *CommitMsg, opts ...grpc.CallOption) (*Void, error)
	NotifyWeakAccuse(ctx context.Context, in *WeakAccuse, opts ...grpc.CallOption) (*Void, error)
	NotifyStrongAccuse(ctx context.Context, in *StrongAccuse, opts ...grpc.CallOption) (*Void, error)
	NotifyVote(ctx context.Context, in *Vote, opts ...grpc.CallOption) (*Void, error)
	NotifyTxs(ctx context.Context, in *Transactions, opts ...grpc.CallOption) (*Void, error)
	NotifySignRequest(ctx context.Context, in *SignRequest, opts ...grpc.CallOption) (*Void, error)
	// 新节点加入
	NotifyJoin(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*Void, error)
	NotifyJoinCheckSynced(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*JoinResponse, error)
	NotifyLeave(ctx context.Context, in *LeaveRequest, opts ...grpc.CallOption) (*Void, error)
	GetClusterNodes(ctx context.Context, in *Void, opts ...grpc.CallOption) (*NodeList, error)
	WatchSyncUp(ctx context.Context, in *SyncUpRequest, opts ...grpc.CallOption) (*SyncUpResponse, error)
	NotifySignResult(ctx context.Context, in *SignResult, opts ...grpc.CallOption) (*Void, error)
	// rpc NotifyChainTxIdMsg(ChainTxIdMsg) returns (Void);
	IsCommited(ctx context.Context, in *crypto.Digest256, opts ...grpc.CallOption) (*IsCommitedResponse, error)
	// 获取节点运行中的info,监听的区块的高度和成为主节点的次数
	GetNodeRuntimeInfo(ctx context.Context, in *Void, opts ...grpc.CallOption) (*NodeRuntimeInfo, error)
}

type braftClient struct {
	cc *grpc.ClientConn
}

func NewBraftClient(cc *grpc.ClientConn) BraftClient {
	return &braftClient{cc}
}

func (c *braftClient) Echo(ctx context.Context, in *EchoRequest, opts ...grpc.CallOption) (*EchoResponse, error) {
	out := new(EchoResponse)
	err := c.cc.Invoke(ctx, "/proto.Braft/Echo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *braftClient) SyncUp(ctx context.Context, in *SyncUpRequest, opts ...grpc.CallOption) (*SyncUpResponse, error) {
	out := new(SyncUpResponse)
	err := c.cc.Invoke(ctx, "/proto.Braft/SyncUp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *braftClient) NotifyInitMsg(ctx context.Context, in *InitMsg, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/proto.Braft/NotifyInitMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *braftClient) NotifyPrepareMsg(ctx context.Context, in *PrepareMsg, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/proto.Braft/NotifyPrepareMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *braftClient) NotifyCommitMsg(ctx context.Context, in *CommitMsg, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/proto.Braft/NotifyCommitMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *braftClient) NotifyWeakAccuse(ctx context.Context, in *WeakAccuse, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/proto.Braft/NotifyWeakAccuse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *braftClient) NotifyStrongAccuse(ctx context.Context, in *StrongAccuse, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/proto.Braft/NotifyStrongAccuse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *braftClient) NotifyVote(ctx context.Context, in *Vote, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/proto.Braft/NotifyVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *braftClient) NotifyTxs(ctx context.Context, in *Transactions, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/proto.Braft/NotifyTxs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *braftClient) NotifySignRequest(ctx context.Context, in *SignRequest, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/proto.Braft/NotifySignRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *braftClient) NotifyJoin(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/proto.Braft/NotifyJoin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *braftClient) NotifyJoinCheckSynced(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*JoinResponse, error) {
	out := new(JoinResponse)
	err := c.cc.Invoke(ctx, "/proto.Braft/NotifyJoinCheckSynced", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *braftClient) NotifyLeave(ctx context.Context, in *LeaveRequest, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/proto.Braft/NotifyLeave", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *braftClient) GetClusterNodes(ctx context.Context, in *Void, opts ...grpc.CallOption) (*NodeList, error) {
	out := new(NodeList)
	err := c.cc.Invoke(ctx, "/proto.Braft/GetClusterNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *braftClient) WatchSyncUp(ctx context.Context, in *SyncUpRequest, opts ...grpc.CallOption) (*SyncUpResponse, error) {
	out := new(SyncUpResponse)
	err := c.cc.Invoke(ctx, "/proto.Braft/WatchSyncUp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *braftClient) NotifySignResult(ctx context.Context, in *SignResult, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/proto.Braft/NotifySignResult", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *braftClient) IsCommited(ctx context.Context, in *crypto.Digest256, opts ...grpc.CallOption) (*IsCommitedResponse, error) {
	out := new(IsCommitedResponse)
	err := c.cc.Invoke(ctx, "/proto.Braft/IsCommited", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *braftClient) GetNodeRuntimeInfo(ctx context.Context, in *Void, opts ...grpc.CallOption) (*NodeRuntimeInfo, error) {
	out := new(NodeRuntimeInfo)
	err := c.cc.Invoke(ctx, "/proto.Braft/GetNodeRuntimeInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BraftServer is the server API for Braft service.
type BraftServer interface {
	// just for testing
	Echo(context.Context, *EchoRequest) (*EchoResponse, error)
	// Among core nodes in the cluster
	SyncUp(context.Context, *SyncUpRequest) (*SyncUpResponse, error)
	NotifyInitMsg(context.Context, *InitMsg) (*Void, error)
	NotifyPrepareMsg(context.Context, *PrepareMsg) (*Void, error)
	NotifyCommitMsg(context.Context, *CommitMsg) (*Void, error)
	NotifyWeakAccuse(context.Context, *WeakAccuse) (*Void, error)
	NotifyStrongAccuse(context.Context, *StrongAccuse) (*Void, error)
	NotifyVote(context.Context, *Vote) (*Void, error)
	NotifyTxs(context.Context, *Transactions) (*Void, error)
	NotifySignRequest(context.Context, *SignRequest) (*Void, error)
	// 新节点加入
	NotifyJoin(context.Context, *JoinRequest) (*Void, error)
	NotifyJoinCheckSynced(context.Context, *JoinRequest) (*JoinResponse, error)
	NotifyLeave(context.Context, *LeaveRequest) (*Void, error)
	GetClusterNodes(context.Context, *Void) (*NodeList, error)
	WatchSyncUp(context.Context, *SyncUpRequest) (*SyncUpResponse, error)
	NotifySignResult(context.Context, *SignResult) (*Void, error)
	// rpc NotifyChainTxIdMsg(ChainTxIdMsg) returns (Void);
	IsCommited(context.Context, *crypto.Digest256) (*IsCommitedResponse, error)
	// 获取节点运行中的info,监听的区块的高度和成为主节点的次数
	GetNodeRuntimeInfo(context.Context, *Void) (*NodeRuntimeInfo, error)
}

func RegisterBraftServer(s *grpc.Server, srv BraftServer) {
	s.RegisterService(&_Braft_serviceDesc, srv)
}

func _Braft_Echo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EchoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BraftServer).Echo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Braft/Echo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BraftServer).Echo(ctx, req.(*EchoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Braft_SyncUp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncUpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BraftServer).SyncUp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Braft/SyncUp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BraftServer).SyncUp(ctx, req.(*SyncUpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Braft_NotifyInitMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BraftServer).NotifyInitMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Braft/NotifyInitMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BraftServer).NotifyInitMsg(ctx, req.(*InitMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Braft_NotifyPrepareMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrepareMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BraftServer).NotifyPrepareMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Braft/NotifyPrepareMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BraftServer).NotifyPrepareMsg(ctx, req.(*PrepareMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Braft_NotifyCommitMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommitMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BraftServer).NotifyCommitMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Braft/NotifyCommitMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BraftServer).NotifyCommitMsg(ctx, req.(*CommitMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Braft_NotifyWeakAccuse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WeakAccuse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BraftServer).NotifyWeakAccuse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Braft/NotifyWeakAccuse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BraftServer).NotifyWeakAccuse(ctx, req.(*WeakAccuse))
	}
	return interceptor(ctx, in, info, handler)
}

func _Braft_NotifyStrongAccuse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StrongAccuse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BraftServer).NotifyStrongAccuse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Braft/NotifyStrongAccuse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BraftServer).NotifyStrongAccuse(ctx, req.(*StrongAccuse))
	}
	return interceptor(ctx, in, info, handler)
}

func _Braft_NotifyVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Vote)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BraftServer).NotifyVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Braft/NotifyVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BraftServer).NotifyVote(ctx, req.(*Vote))
	}
	return interceptor(ctx, in, info, handler)
}

func _Braft_NotifyTxs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Transactions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BraftServer).NotifyTxs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Braft/NotifyTxs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BraftServer).NotifyTxs(ctx, req.(*Transactions))
	}
	return interceptor(ctx, in, info, handler)
}

func _Braft_NotifySignRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BraftServer).NotifySignRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Braft/NotifySignRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BraftServer).NotifySignRequest(ctx, req.(*SignRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Braft_NotifyJoin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BraftServer).NotifyJoin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Braft/NotifyJoin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BraftServer).NotifyJoin(ctx, req.(*JoinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Braft_NotifyJoinCheckSynced_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BraftServer).NotifyJoinCheckSynced(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Braft/NotifyJoinCheckSynced",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BraftServer).NotifyJoinCheckSynced(ctx, req.(*JoinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Braft_NotifyLeave_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LeaveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BraftServer).NotifyLeave(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Braft/NotifyLeave",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BraftServer).NotifyLeave(ctx, req.(*LeaveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Braft_GetClusterNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BraftServer).GetClusterNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Braft/GetClusterNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BraftServer).GetClusterNodes(ctx, req.(*Void))
	}
	return interceptor(ctx, in, info, handler)
}

func _Braft_WatchSyncUp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncUpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BraftServer).WatchSyncUp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Braft/WatchSyncUp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BraftServer).WatchSyncUp(ctx, req.(*SyncUpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Braft_NotifySignResult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignResult)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BraftServer).NotifySignResult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Braft/NotifySignResult",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BraftServer).NotifySignResult(ctx, req.(*SignResult))
	}
	return interceptor(ctx, in, info, handler)
}

func _Braft_IsCommited_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(crypto.Digest256)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BraftServer).IsCommited(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Braft/IsCommited",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BraftServer).IsCommited(ctx, req.(*crypto.Digest256))
	}
	return interceptor(ctx, in, info, handler)
}

func _Braft_GetNodeRuntimeInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BraftServer).GetNodeRuntimeInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Braft/GetNodeRuntimeInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BraftServer).GetNodeRuntimeInfo(ctx, req.(*Void))
	}
	return interceptor(ctx, in, info, handler)
}

var _Braft_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Braft",
	HandlerType: (*BraftServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Echo",
			Handler:    _Braft_Echo_Handler,
		},
		{
			MethodName: "SyncUp",
			Handler:    _Braft_SyncUp_Handler,
		},
		{
			MethodName: "NotifyInitMsg",
			Handler:    _Braft_NotifyInitMsg_Handler,
		},
		{
			MethodName: "NotifyPrepareMsg",
			Handler:    _Braft_NotifyPrepareMsg_Handler,
		},
		{
			MethodName: "NotifyCommitMsg",
			Handler:    _Braft_NotifyCommitMsg_Handler,
		},
		{
			MethodName: "NotifyWeakAccuse",
			Handler:    _Braft_NotifyWeakAccuse_Handler,
		},
		{
			MethodName: "NotifyStrongAccuse",
			Handler:    _Braft_NotifyStrongAccuse_Handler,
		},
		{
			MethodName: "NotifyVote",
			Handler:    _Braft_NotifyVote_Handler,
		},
		{
			MethodName: "NotifyTxs",
			Handler:    _Braft_NotifyTxs_Handler,
		},
		{
			MethodName: "NotifySignRequest",
			Handler:    _Braft_NotifySignRequest_Handler,
		},
		{
			MethodName: "NotifyJoin",
			Handler:    _Braft_NotifyJoin_Handler,
		},
		{
			MethodName: "NotifyJoinCheckSynced",
			Handler:    _Braft_NotifyJoinCheckSynced_Handler,
		},
		{
			MethodName: "NotifyLeave",
			Handler:    _Braft_NotifyLeave_Handler,
		},
		{
			MethodName: "GetClusterNodes",
			Handler:    _Braft_GetClusterNodes_Handler,
		},
		{
			MethodName: "WatchSyncUp",
			Handler:    _Braft_WatchSyncUp_Handler,
		},
		{
			MethodName: "NotifySignResult",
			Handler:    _Braft_NotifySignResult_Handler,
		},
		{
			MethodName: "IsCommited",
			Handler:    _Braft_IsCommited_Handler,
		},
		{
			MethodName: "GetNodeRuntimeInfo",
			Handler:    _Braft_GetNodeRuntimeInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/ofgp/ofgp-core/proto/braft.proto",
}

func init() {
	proto.RegisterFile("github.com/ofgp/ofgp-core/proto/braft.proto", fileDescriptor_braft_82ca4c9bdc79a242)
}

var fileDescriptor_braft_82ca4c9bdc79a242 = []byte{
	// 2663 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x59, 0x4b, 0x73, 0xe3, 0xc6,
	0xf1, 0x37, 0x08, 0x3e, 0xc0, 0x06, 0x29, 0x71, 0x47, 0xf6, 0xfe, 0xb9, 0xb4, 0xd7, 0x2b, 0xc3,
	0xaf, 0xf5, 0xda, 0x96, 0xb6, 0xd6, 0xeb, 0xd7, 0x56, 0xfd, 0x63, 0xaf, 0x24, 0x5a, 0xa2, 0xbd,
	0xa2, 0x1c, 0x90, 0xf6, 0x26, 0x27, 0x06, 0x04, 0x46, 0x24, 0x4a, 0x24, 0x40, 0x63, 0x86, 0x12,
	0x75, 0x49, 0xa5, 0x72, 0x4a, 0x6e, 0xc9, 0x29, 0x97, 0x5c, 0x72, 0x73, 0x25, 0x97, 0x24, 0x95,
	0xca, 0x3d, 0x3e, 0xe7, 0x23, 0xe4, 0x94, 0xca, 0xc7, 0xc8, 0x21, 0x35, 0x2f, 0x60, 0x20, 0x91,
	0x5a, 0x3f, 0x92, 0xaa, 0xe4, 0x22, 0x61, 0x7a, 0xba, 0x67, 0xba, 0x7f, 0xd3, 0xd3, 0x8f, 0x21,
	0xbc, 0x3e, 0x0a, 0xe9, 0x78, 0x3e, 0xdc, 0xf2, 0xe3, 0xe9, 0x76, 0x7c, 0x3c, 0x9a, 0xf1, 0x3f,
	0x6f, 0xfa, 0x71, 0x82, 0xb7, 0x67, 0x49, 0x4c, 0xe3, 0xed, 0x61, 0xe2, 0x1d, 0xd3, 0x2d, 0xfe,
	0x8d, 0x4a, 0xfc, 0x5f, 0xeb, 0xcd, 0xd5, 0x32, 0x7e, 0x72, 0x3e, 0xa3, 0xb1, 0xfc, 0x27, 0xa4,
	0x9c, 0x17, 0xc1, 0x6e, 0xfb, 0xe3, 0xd8, 0xc5, 0x5f, 0xcc, 0x31, 0xa1, 0xe8, 0x69, 0x28, 0x45,
	0x71, 0xe4, 0xe3, 0xa6, 0xb1, 0x69, 0xdc, 0x2e, 0xb9, 0x62, 0xe0, 0xbc, 0x04, 0x35, 0xc1, 0x44,
	0x66, 0x71, 0x44, 0xf0, 0x0a, 0xae, 0xbb, 0x50, 0xef, 0x9d, 0x47, 0xfe, 0x67, 0x33, 0xb5, 0xd8,
	0x2d, 0xb0, 0x87, 0x1e, 0xc1, 0x83, 0x31, 0x0e, 0x47, 0x63, 0xca, 0x99, 0x4d, 0x17, 0x18, 0xe9,
	0x80, 0x53, 0x9c, 0x1d, 0xd8, 0x10, 0x12, 0x3b, 0xe7, 0x07, 0x1e, 0x19, 0x2b, 0xb9, 0xd7, 0xa1,
	0x32, 0x89, 0x7d, 0x8f, 0xc6, 0x49, 0xd3, 0xd8, 0x34, 0x6f, 0xdb, 0xf7, 0xae, 0x6d, 0x49, 0x9d,
	0xf7, 0xc2, 0x11, 0x26, 0xf4, 0xde, 0xdb, 0xef, 0xb8, 0x8a, 0xc3, 0xf9, 0xa3, 0x01, 0x6b, 0x6a,
	0x5b, 0xa9, 0xde, 0x1d, 0xa8, 0xf8, 0xf1, 0x74, 0x1a, 0x52, 0x22, 0xe5, 0x1b, 0xc2, 0xd8, 0xad,
	0x9d, 0x49, 0xec, 0x9f, 0x7c, 0xea, 0xf9, 0x27, 0xae, 0x62, 0x40, 0xaf, 0x40, 0xe9, 0x38, 0xc1,
	0x64, 0xdc, 0x2c, 0x6c, 0x1a, 0x4b, 0x39, 0xc5, 0x34, 0x7a, 0x0f, 0xea, 0x84, 0x26, 0x71, 0x34,
	0x1a, 0x78, 0xbe, 0x3f, 0x27, 0xb8, 0x69, 0x72, 0xfe, 0x0d, 0xc9, 0xdf, 0xe3, 0x73, 0x0f, 0xf9,
	0x94, 0x5b, 0x23, 0xda, 0x08, 0x21, 0x28, 0x4e, 0xe3, 0x04, 0x37, 0x8b, 0x9b, 0xc6, 0x6d, 0xcb,
	0xe5, 0xdf, 0x4e, 0x19, 0x8a, 0x9f, 0xc7, 0x61, 0xe0, 0xfc, 0xd4, 0x80, 0xb5, 0x1d, 0x7f, 0xcc,
	0x77, 0x3b, 0xc0, 0x5e, 0x80, 0x13, 0x74, 0x1d, 0xca, 0x1a, 0x5e, 0x25, 0x57, 0x8e, 0xd0, 0x1b,
	0x60, 0x0d, 0x19, 0xdb, 0x20, 0x0c, 0xa4, 0xae, 0xcb, 0x50, 0xe1, 0x2c, 0x9d, 0x80, 0x41, 0x30,
	0x4b, 0xf0, 0x29, 0x63, 0x36, 0x57, 0x31, 0x97, 0x19, 0x47, 0x27, 0x70, 0x3e, 0x00, 0xfb, 0x61,
	0x10, 0x24, 0x98, 0x90, 0x4e, 0x74, 0x1c, 0xa3, 0x26, 0x54, 0x3c, 0x31, 0xe4, 0x1a, 0x54, 0x5d,
	0x35, 0x64, 0xaa, 0x79, 0xd3, 0x78, 0x1e, 0x51, 0xae, 0x80, 0xe9, 0xca, 0x91, 0xf3, 0x17, 0x03,
	0x6a, 0x8f, 0x3d, 0xea, 0x8f, 0x71, 0xd0, 0x3e, 0xc5, 0x11, 0x45, 0x2d, 0xb0, 0x86, 0x73, 0x12,
	0x46, 0xd9, 0x1a, 0xe9, 0x18, 0xdd, 0x04, 0xc0, 0x8c, 0x69, 0x40, 0xcf, 0x67, 0x98, 0x2f, 0x54,
	0x77, 0xab, 0x9c, 0xd2, 0x3f, 0x9f, 0x31, 0xd7, 0x2a, 0xd3, 0xc5, 0x20, 0x1c, 0x08, 0xbd, 0xab,
	0x6e, 0x91, 0x2e, 0x3a, 0x7b, 0xda, 0xce, 0x0c, 0xc5, 0xb2, 0xda, 0x19, 0x35, 0xc0, 0x3c, 0xc6,
	0xb8, 0x59, 0xe2, 0x44, 0xf6, 0xc9, 0xd0, 0x3e, 0x4e, 0xe2, 0x69, 0xb3, 0xcc, 0x17, 0xe6, 0xdf,
	0x68, 0x0d, 0x0a, 0x34, 0x6e, 0x56, 0x38, 0xa5, 0x40, 0x63, 0xc6, 0x13, 0x78, 0xd4, 0x6b, 0x5a,
	0x9b, 0xc6, 0xed, 0x9a, 0xcb, 0xbf, 0x9d, 0x7f, 0x18, 0x50, 0x97, 0x36, 0xf4, 0x17, 0x1c, 0x07,
	0x04, 0x45, 0xba, 0x08, 0x03, 0x69, 0x00, 0xff, 0x5e, 0x85, 0x00, 0x7a, 0x17, 0xea, 0x09, 0xf6,
	0xc7, 0x5e, 0x32, 0xc2, 0x83, 0x49, 0x48, 0x68, 0xd3, 0xe4, 0x7e, 0x87, 0xa4, 0x77, 0x68, 0xf0,
	0xba, 0x35, 0xc5, 0xf8, 0x28, 0x24, 0x34, 0x55, 0xb7, 0x28, 0x36, 0xd1, 0xd4, 0x2d, 0x71, 0x0a,
	0x53, 0x57, 0x1a, 0x59, 0xe6, 0x3b, 0x72, 0x23, 0x6f, 0x02, 0xd0, 0xf8, 0x04, 0x47, 0x03, 0x2e,
	0x2b, 0x0c, 0xab, 0x72, 0xca, 0x47, 0x6c, 0x81, 0x1b, 0x60, 0x89, 0x69, 0x1a, 0x73, 0x1b, 0xeb,
	0x6e, 0x85, 0x8f, 0xfb, 0xb1, 0x73, 0x13, 0x2a, 0x5d, 0x7c, 0x36, 0x39, 0xef, 0x2f, 0x52, 0x14,
	0x0c, 0x0d, 0x85, 0x21, 0x58, 0x9f, 0xce, 0x87, 0x93, 0xd0, 0xef, 0x2f, 0xd8, 0x25, 0xf7, 0xc7,
	0x5e, 0x18, 0x71, 0x86, 0xba, 0x2b, 0x06, 0xda, 0xf9, 0x14, 0x96, 0x9e, 0x8f, 0x99, 0xc3, 0x45,
	0xed, 0x51, 0xd4, 0xf6, 0xf8, 0xca, 0x00, 0xbb, 0x9f, 0x78, 0x11, 0xf1, 0x7c, 0x1a, 0xc6, 0x11,
	0x7a, 0x35, 0x5d, 0xd1, 0x58, 0xe5, 0xa9, 0x62, 0x13, 0xdd, 0xab, 0x0a, 0x17, 0xbc, 0xea, 0x05,
	0x30, 0x4f, 0xc3, 0x48, 0xc2, 0xbe, 0x2e, 0x61, 0x57, 0xa6, 0xb8, 0x6c, 0x0e, 0xbd, 0x08, 0xc5,
	0xd3, 0x78, 0xce, 0x3c, 0x68, 0x29, 0x0f, 0x9f, 0xe4, 0x87, 0x1e, 0x4e, 0x85, 0x47, 0x99, 0x2e,
	0xff, 0x4e, 0x8d, 0x28, 0x6b, 0x46, 0xfc, 0xda, 0x80, 0x35, 0xcd, 0x88, 0xa3, 0x49, 0x80, 0x5e,
	0x80, 0x42, 0x78, 0x85, 0x0d, 0x85, 0x30, 0x40, 0x6f, 0x01, 0x9c, 0x09, 0x1f, 0x1b, 0xd0, 0x85,
	0xbc, 0xc5, 0x4f, 0x4b, 0x45, 0x72, 0xce, 0xe7, 0x56, 0xcf, 0xd4, 0x10, 0x3d, 0x0f, 0x76, 0xc4,
	0x8e, 0x6c, 0xc0, 0x50, 0x52, 0xd7, 0xa2, 0x1a, 0x89, 0x53, 0xec, 0x04, 0xa9, 0xca, 0xc5, 0x4c,
	0x65, 0xe7, 0x3e, 0xd4, 0x34, 0xed, 0x08, 0x7a, 0x09, 0x4c, 0xba, 0x50, 0xd1, 0x50, 0x79, 0xa5,
	0xc6, 0xe1, 0xb2, 0x69, 0xe7, 0xff, 0xa1, 0xde, 0x5f, 0x3c, 0x8a, 0xe3, 0x93, 0xf9, 0xac, 0x1d,
	0xd1, 0xe4, 0xfc, 0x42, 0x2c, 0x32, 0xd3, 0x58, 0xf4, 0x34, 0x94, 0xc2, 0x28, 0xc0, 0xc2, 0x84,
	0x92, 0x2b, 0x06, 0xce, 0x8f, 0xc1, 0x72, 0xb1, 0x1f, 0x47, 0xc7, 0xe1, 0x08, 0xdd, 0x86, 0x22,
	0xbf, 0xdf, 0x4c, 0x6e, 0x2d, 0xb5, 0x51, 0x4d, 0x6f, 0xb1, 0xab, 0xee, 0x72, 0x0e, 0xa6, 0xfe,
	0x38, 0x26, 0x54, 0xb9, 0x13, 0xfb, 0x46, 0xff, 0x07, 0x95, 0x28, 0x0e, 0xb0, 0x32, 0xb7, 0xe4,
	0x96, 0xd9, 0xb0, 0x13, 0x38, 0xcf, 0x42, 0x91, 0x47, 0x09, 0x0b, 0x8a, 0x1f, 0x1f, 0x75, 0xba,
	0x8d, 0xa7, 0x50, 0x15, 0x4a, 0x8f, 0xda, 0x0f, 0x3f, 0x6f, 0x37, 0x0c, 0xe7, 0xf7, 0x26, 0x94,
	0x78, 0x24, 0x45, 0x9b, 0x60, 0x33, 0x18, 0x08, 0xf5, 0xa6, 0xb3, 0x43, 0x22, 0x95, 0xd7, 0x49,
	0xe8, 0x6d, 0xa8, 0xf3, 0xf8, 0xf8, 0xe4, 0x90, 0x6a, 0x33, 0xbe, 0x1d, 0x19, 0x56, 0x5f, 0x96,
	0x66, 0x99, 0xdc, 0xac, 0x6b, 0x7a, 0xb2, 0xd0, 0x6d, 0xda, 0x82, 0x0a, 0x5d, 0x0c, 0xe2, 0x49,
	0x40, 0xa4, 0xb7, 0x3d, 0x73, 0x19, 0xf2, 0xa3, 0x49, 0xe0, 0x96, 0xe9, 0xe2, 0x68, 0x12, 0x10,
	0xf4, 0x01, 0x34, 0x86, 0xfe, 0x58, 0x2a, 0x33, 0xe6, 0x79, 0x80, 0x7b, 0x60, 0x26, 0x98, 0x4f,
	0x12, 0xee, 0xda, 0x30, 0x9f, 0x34, 0x5e, 0x07, 0x2b, 0x91, 0xd8, 0x72, 0x37, 0xcd, 0xfc, 0x5b,
	0x41, 0xee, 0xa6, 0x0c, 0xd2, 0x51, 0x2b, 0x57, 0x39, 0xaa, 0xf4, 0x17, 0xeb, 0x6a, 0x7f, 0xf9,
	0x50, 0x9e, 0x86, 0x0d, 0x95, 0xcf, 0xba, 0x9f, 0x74, 0x8f, 0x1e, 0xb3, 0x03, 0xb1, 0xa1, 0xb2,
	0xdf, 0xee, 0xb6, 0x7b, 0x9d, 0x5e, 0xc3, 0x40, 0x15, 0x30, 0xfb, 0x3f, 0xe8, 0x35, 0x0a, 0xec,
	0x63, 0x67, 0xf7, 0xa0, 0x61, 0xa2, 0x1a, 0x58, 0x6e, 0x7b, 0xf7, 0xa8, 0xfb, 0x51, 0x67, 0xbf,
	0x51, 0x74, 0x7e, 0x6e, 0x40, 0x55, 0x60, 0xab, 0x22, 0x2e, 0x4e, 0xa6, 0xf2, 0xbc, 0xf8, 0xb7,
	0xe6, 0x82, 0x85, 0x9c, 0x0b, 0xea, 0xe9, 0xd0, 0x7c, 0x62, 0x3a, 0x74, 0xa0, 0xc4, 0x3f, 0xf9,
	0x25, 0xb1, 0xef, 0xd5, 0xf4, 0x83, 0x73, 0xc5, 0x94, 0xf3, 0x55, 0x41, 0xea, 0xc2, 0xd2, 0x3e,
	0x72, 0xa0, 0x18, 0x46, 0x21, 0x95, 0xf7, 0x79, 0x4d, 0x0a, 0x74, 0xa2, 0x90, 0x1e, 0x92, 0x91,
	0xcb, 0xe7, 0xd0, 0x03, 0xb0, 0x66, 0x09, 0x9e, 0x79, 0x09, 0x66, 0x01, 0x89, 0x41, 0xf5, 0xfc,
	0xc5, 0xf2, 0x61, 0xeb, 0x53, 0xc9, 0xc0, 0x2f, 0x94, 0x9b, 0xf2, 0xa3, 0x77, 0xb3, 0x1a, 0x45,
	0x04, 0xad, 0x9b, 0x97, 0x44, 0x77, 0xc5, 0xbc, 0x90, 0x54, 0xdc, 0xad, 0x2e, 0xd4, 0x73, 0x6b,
	0xb2, 0xf4, 0x70, 0x82, 0xcf, 0x65, 0xb5, 0xc0, 0x3e, 0xd1, 0xab, 0x50, 0x3a, 0xf5, 0x26, 0x73,
	0x9c, 0x3a, 0xb5, 0x0c, 0x75, 0x42, 0x8c, 0xe9, 0x2f, 0xe6, 0x1f, 0x14, 0xde, 0x33, 0x5a, 0x8f,
	0xa0, 0xa6, 0x6f, 0xb4, 0x64, 0xb9, 0x57, 0xf2, 0xcb, 0xa9, 0x12, 0x49, 0x48, 0xe5, 0x57, 0x73,
	0xfe, 0x5e, 0x80, 0xd2, 0xe7, 0x31, 0x0d, 0xf1, 0x37, 0x3a, 0xcc, 0xf4, 0x78, 0xcc, 0x95, 0xc7,
	0x83, 0xde, 0xd1, 0xc0, 0x16, 0x97, 0xaa, 0x25, 0xd9, 0xf8, 0x7e, 0x2b, 0x81, 0x7e, 0x2b, 0x03,
	0xba, 0xc4, 0xc5, 0x6e, 0xe4, 0xc4, 0xfe, 0x17, 0x41, 0x0e, 0x59, 0xf5, 0x48, 0x97, 0x43, 0xec,
	0x40, 0xe9, 0x94, 0x19, 0x26, 0xd7, 0xa9, 0xe9, 0xc6, 0xba, 0x62, 0x6a, 0x65, 0x78, 0x65, 0x6a,
	0x91, 0x70, 0x24, 0xb3, 0x35, 0xfb, 0x74, 0xfe, 0x69, 0x40, 0x45, 0x3a, 0xfd, 0xbf, 0xfd, 0x44,
	0x35, 0x35, 0x8a, 0xcb, 0xd4, 0x28, 0xa5, 0x6a, 0xa0, 0x6d, 0x6e, 0x15, 0x26, 0xcd, 0x72, 0xee,
	0x08, 0xa5, 0x66, 0xcc, 0x3a, 0x75, 0xf0, 0x82, 0xaf, 0xd5, 0x06, 0xc8, 0x88, 0x4b, 0xe0, 0x7e,
	0x21, 0x0f, 0xb7, 0x9d, 0xc1, 0x84, 0x75, 0xa4, 0x7f, 0x69, 0x00, 0x64, 0x27, 0xfa, 0x1f, 0x0c,
	0x50, 0x5f, 0x1f, 0x0b, 0xe7, 0x17, 0x06, 0x54, 0x53, 0xb7, 0xf8, 0xef, 0x50, 0x69, 0x00, 0xf0,
	0x18, 0x7b, 0x27, 0x59, 0xc3, 0x73, 0x49, 0x25, 0x6d, 0xb1, 0xc2, 0xb2, 0xc5, 0xcc, 0xec, 0xac,
	0x97, 0xd5, 0x33, 0xbf, 0x32, 0xc0, 0xce, 0x76, 0x20, 0xe8, 0x7d, 0xa8, 0x88, 0x36, 0x4c, 0xd5,
	0x34, 0xb7, 0x54, 0x15, 0x95, 0x31, 0x6d, 0xc9, 0xff, 0xf2, 0x6a, 0x4b, 0xfe, 0xd6, 0x21, 0xd4,
	0xf4, 0x89, 0xaf, 0x7f, 0xb3, 0xb3, 0xa5, 0x75, 0x0f, 0xf9, 0xad, 0x01, 0x35, 0xbd, 0xf9, 0x43,
	0xfb, 0x50, 0x3b, 0xc3, 0xde, 0xc9, 0x20, 0xaf, 0xdf, 0x4b, 0x4b, 0xfa, 0x44, 0x5d, 0x59, 0xa1,
	0xa4, 0x7d, 0x96, 0x51, 0x5a, 0xdf, 0x87, 0xc6, 0x45, 0x86, 0xef, 0xaa, 0xec, 0x97, 0x05, 0xb0,
	0x7b, 0xe1, 0x28, 0x52, 0x8d, 0xf6, 0x37, 0x3a, 0xa9, 0xd7, 0xa0, 0x31, 0x9d, 0x4f, 0x68, 0x48,
	0xc2, 0xd1, 0x40, 0x35, 0x88, 0xa2, 0x18, 0x5d, 0x57, 0x74, 0xd9, 0xe7, 0xb0, 0x66, 0x59, 0xd5,
	0xb9, 0xbc, 0xb3, 0x93, 0x69, 0x77, 0x23, 0x5f, 0xea, 0xf2, 0x5e, 0xd1, 0xad, 0x9d, 0xe9, 0x9d,
	0xe3, 0x6b, 0x60, 0xa9, 0x62, 0x57, 0x56, 0x40, 0x2a, 0xf5, 0xca, 0xb6, 0xc5, 0xad, 0xc8, 0xca,
	0x57, 0x79, 0x4e, 0x39, 0xf3, 0x1c, 0xbd, 0x41, 0xa8, 0x5c, 0x68, 0x10, 0x94, 0x57, 0x59, 0x5a,
	0x61, 0xdf, 0xe2, 0x55, 0x13, 0x6f, 0xc6, 0x9a, 0x55, 0xbe, 0x4c, 0x3a, 0x76, 0xfe, 0x6a, 0x00,
	0x08, 0xa8, 0xc8, 0x7c, 0x72, 0x75, 0x47, 0xfb, 0x22, 0x14, 0xfd, 0x38, 0x10, 0x27, 0xb0, 0x96,
	0x16, 0x5e, 0xbb, 0x71, 0x80, 0x45, 0x49, 0xc8, 0x26, 0x51, 0x13, 0x2c, 0x01, 0xeb, 0x20, 0x1f,
	0x74, 0xf7, 0xd0, 0x0d, 0xa8, 0x12, 0x7f, 0x20, 0x5b, 0x20, 0xd1, 0x07, 0x96, 0x89, 0xdf, 0x67,
	0x1d, 0x4f, 0xd6, 0x09, 0xa6, 0x8d, 0x2b, 0x3f, 0xaf, 0xb2, 0x76, 0x5e, 0xaa, 0x3b, 0xa9, 0x6c,
	0x9a, 0xaa, 0x3b, 0x51, 0xd0, 0x58, 0xd9, 0x0d, 0xfd, 0x11, 0xac, 0x31, 0x6b, 0xfa, 0x8b, 0xf4,
	0x91, 0x44, 0x69, 0x6d, 0x5c, 0xa5, 0xf5, 0x93, 0xaf, 0xad, 0xa9, 0x76, 0xf8, 0x1d, 0xbb, 0x08,
	0xe1, 0x28, 0xc2, 0x81, 0x84, 0xec, 0xbb, 0x6d, 0xb0, 0x01, 0x25, 0xbd, 0xdf, 0x61, 0x1d, 0x60,
	0x20, 0xf1, 0x28, 0xa6, 0x9d, 0xb1, 0xc2, 0xa3, 0xb4, 0x04, 0x8f, 0xf2, 0x65, 0x3c, 0x2a, 0x19,
	0x1e, 0x7f, 0x33, 0x60, 0x5d, 0x68, 0xdb, 0xa3, 0x1e, 0x0d, 0x09, 0x0d, 0x7d, 0xd6, 0x35, 0x08,
	0xd2, 0x21, 0x19, 0x75, 0x54, 0xdf, 0xaf, 0x93, 0xd0, 0x7d, 0x28, 0x12, 0xea, 0x51, 0x59, 0xec,
	0x6d, 0xaa, 0x3b, 0x9d, 0x5f, 0x67, 0x8b, 0x7d, 0x89, 0xfb, 0xcc, 0xb9, 0x59, 0x83, 0xcb, 0xfe,
	0xcf, 0x89, 0x6c, 0x1b, 0x14, 0x14, 0xfd, 0x45, 0x8f, 0x93, 0x5d, 0x39, 0xdd, 0x3a, 0x80, 0x6a,
	0x2a, 0xbb, 0xe4, 0xaa, 0xbf, 0xac, 0x5f, 0xf5, 0x25, 0x88, 0x6a, 0x17, 0x3d, 0x82, 0xda, 0x2e,
	0x6b, 0xd7, 0x59, 0x83, 0xc8, 0xb2, 0x84, 0x06, 0xb3, 0xb1, 0x1c, 0xe6, 0x82, 0x06, 0xf3, 0xf3,
	0x60, 0x93, 0x70, 0x14, 0x0d, 0xa6, 0x64, 0xa4, 0x75, 0x9c, 0x8c, 0x24, 0x60, 0xb8, 0x5c, 0x26,
	0x4c, 0xc0, 0xfe, 0x38, 0x0e, 0xf5, 0xb8, 0xc2, 0x7b, 0x3a, 0x43, 0xeb, 0xe9, 0xae, 0x43, 0x79,
	0x36, 0x1f, 0x32, 0x93, 0xc4, 0x56, 0x72, 0x84, 0x6e, 0xb1, 0xb6, 0x9c, 0xaa, 0xf7, 0xb4, 0x5c,
	0x22, 0xe6, 0x13, 0x4b, 0x76, 0xfb, 0x1e, 0xd4, 0xc4, 0x6e, 0xd2, 0x95, 0xaf, 0x83, 0xbc, 0x4b,
	0x39, 0xe3, 0xf8, 0xab, 0x04, 0x39, 0x8f, 0x7c, 0x2c, 0xac, 0xb3, 0x5c, 0x39, 0x72, 0x3e, 0x81,
	0xda, 0x23, 0xec, 0x9d, 0x62, 0xa5, 0xee, 0x4a, 0x74, 0x1a, 0x60, 0x4e, 0xc9, 0x48, 0x2a, 0xcc,
	0x3e, 0x2f, 0xa7, 0x2b, 0xe7, 0x27, 0x06, 0x58, 0x5d, 0xc6, 0xce, 0x3a, 0x98, 0x95, 0x2b, 0x21,
	0x28, 0x46, 0xde, 0x14, 0x2b, 0x98, 0xd9, 0xb7, 0x86, 0x88, 0x99, 0x43, 0x44, 0xa1, 0x57, 0xd4,
	0xd0, 0x7b, 0x16, 0xaa, 0x21, 0x19, 0x44, 0x71, 0x32, 0xf5, 0x26, 0xdc, 0xdd, 0x2d, 0xd7, 0x0a,
	0x49, 0x97, 0x8f, 0x9d, 0x2f, 0x0d, 0xa8, 0x1d, 0xb2, 0x10, 0xdc, 0x0b, 0x47, 0x5c, 0x8d, 0x5b,
	0x60, 0x0f, 0xa9, 0x3f, 0xc8, 0x3f, 0xe3, 0xc1, 0x90, 0xfa, 0x2a, 0x40, 0xdf, 0x81, 0x6b, 0x8c,
	0x21, 0xc1, 0x01, 0xc6, 0xd3, 0x01, 0xf1, 0x93, 0x70, 0x26, 0x8a, 0x85, 0x9a, 0xbb, 0x3e, 0xa4,
	0xbe, 0xcb, 0xe9, 0x3d, 0x4e, 0xe6, 0x8b, 0xf9, 0xe3, 0x0b, 0x21, 0x1f, 0x86, 0xfe, 0x58, 0x5f,
	0xcc, 0x1f, 0x5f, 0x58, 0xac, 0x28, 0x17, 0xf3, 0xc7, 0xfa, 0x62, 0xce, 0x9f, 0x24, 0x5a, 0xfc,
	0xf1, 0xeb, 0x0d, 0xa8, 0x72, 0xb4, 0xf8, 0x8b, 0x99, 0x91, 0x7b, 0x96, 0x51, 0x88, 0xba, 0x3c,
	0x6a, 0x72, 0xee, 0x1d, 0xd8, 0xe0, 0x79, 0x66, 0xc0, 0x12, 0x50, 0x18, 0x1d, 0xc7, 0x42, 0x4e,
	0xdc, 0x45, 0x95, 0x5a, 0x74, 0x18, 0x5c, 0x91, 0xaf, 0xe4, 0x88, 0xaf, 0xf1, 0x2c, 0x54, 0x27,
	0xbc, 0x63, 0xce, 0x6a, 0x5f, 0x4b, 0x10, 0x3a, 0x01, 0xba, 0x01, 0xd6, 0x17, 0xf3, 0x38, 0x99,
	0x4f, 0x07, 0x91, 0xac, 0x78, 0x2a, 0x62, 0xdc, 0x75, 0xfe, 0x60, 0xa8, 0xaa, 0x81, 0xf5, 0xd3,
	0x49, 0xb0, 0x34, 0x73, 0xde, 0x00, 0x6b, 0x12, 0xfb, 0xde, 0x24, 0x0b, 0x66, 0xfc, 0x91, 0x7a,
	0xd2, 0x09, 0xae, 0xde, 0xf7, 0x16, 0xd8, 0xa2, 0x58, 0x10, 0x4f, 0xa2, 0x62, 0x6b, 0x10, 0x24,
	0xde, 0x5f, 0x3f, 0x07, 0xd5, 0xf4, 0xed, 0x42, 0xc6, 0xba, 0x8c, 0xc0, 0xdc, 0x28, 0xc1, 0x1e,
	0x89, 0x23, 0x9e, 0x16, 0xaa, 0xae, 0x1c, 0x39, 0x77, 0x01, 0x75, 0x88, 0x28, 0x14, 0x79, 0x4c,
	0x16, 0x77, 0xa5, 0x05, 0x96, 0x2f, 0x69, 0x5c, 0x79, 0xcb, 0x4d, 0xc7, 0xce, 0x6f, 0x0c, 0x58,
	0x67, 0xc0, 0xbb, 0xf3, 0x88, 0x2d, 0xcf, 0x5d, 0x69, 0xd5, 0xdd, 0x7a, 0x0e, 0xaa, 0x43, 0xea,
	0x1f, 0xe8, 0x65, 0x66, 0x46, 0xe0, 0xb3, 0xfe, 0x58, 0xce, 0x9a, 0x72, 0x56, 0x11, 0xd8, 0x2c,
	0xa6, 0x6a, 0x56, 0x94, 0x79, 0x19, 0x81, 0xcd, 0x0a, 0x68, 0x76, 0x23, 0xca, 0xad, 0x2d, 0xb9,
	0x19, 0xc1, 0x79, 0x1f, 0xec, 0x1d, 0xe6, 0xa0, 0x22, 0x4d, 0xb3, 0x73, 0x60, 0x8e, 0xa9, 0x1e,
	0x31, 0xd9, 0xf7, 0xca, 0x67, 0xea, 0x9f, 0x19, 0x60, 0xb7, 0xe9, 0xf8, 0xdb, 0xc8, 0xe6, 0x9e,
	0x54, 0xcd, 0xdc, 0x93, 0x2a, 0x13, 0x99, 0x62, 0x3a, 0x8e, 0xd3, 0xe4, 0x2d, 0x46, 0x0c, 0xe9,
	0x59, 0x12, 0xcf, 0x62, 0x22, 0x6f, 0x6c, 0xd5, 0x4d, 0xc7, 0x77, 0xee, 0x82, 0xa5, 0xc2, 0x36,
	0x02, 0x28, 0xf7, 0x3a, 0xfb, 0xdd, 0xf6, 0x5e, 0xe3, 0x29, 0x54, 0x03, 0xab, 0xdb, 0x6e, 0xef,
	0xf5, 0x7e, 0xd8, 0xdd, 0x6d, 0x18, 0x6c, 0xc6, 0x6d, 0x7f, 0xdc, 0xde, 0xed, 0x37, 0x0a, 0x77,
	0xee, 0x83, 0xa5, 0xf2, 0x05, 0xb2, 0xa1, 0xf2, 0xf8, 0x61, 0xa7, 0xdf, 0xe9, 0xee, 0x37, 0x9e,
	0x42, 0x75, 0xa8, 0xee, 0x1e, 0x1d, 0x1e, 0x76, 0xfa, 0xfd, 0xf6, 0x5e, 0xc3, 0x10, 0xef, 0x2b,
	0x4c, 0xa6, 0xbd, 0xd7, 0x28, 0xdc, 0xfb, 0x73, 0x05, 0x4a, 0x3b, 0x89, 0x77, 0x4c, 0xd1, 0x36,
	0x14, 0xdb, 0xfe, 0x38, 0x46, 0xea, 0x31, 0x47, 0xfb, 0xd1, 0xa7, 0xb5, 0x91, 0xa3, 0x49, 0x47,
	0x79, 0x1b, 0xca, 0xe2, 0x67, 0x15, 0xa4, 0x5e, 0xef, 0x72, 0x3f, 0xee, 0xb4, 0x9e, 0xb9, 0x40,
	0x95, 0x62, 0x6f, 0x40, 0xbd, 0x1b, 0xd3, 0xf0, 0xf8, 0x5c, 0x75, 0x8d, 0x17, 0x9e, 0x4e, 0x5a,
	0x59, 0x84, 0x0f, 0x03, 0x74, 0x0f, 0x1a, 0x82, 0x5b, 0x6b, 0xb2, 0x2e, 0x77, 0xd2, 0x79, 0x99,
	0xbb, 0xcc, 0x49, 0x99, 0x4c, 0xd6, 0x04, 0x5d, 0xea, 0x96, 0x57, 0xec, 0xa2, 0x35, 0x29, 0x97,
	0x0b, 0xe5, 0xbc, 0xcc, 0x3b, 0x80, 0x84, 0x4c, 0xae, 0xb8, 0x5f, 0xf6, 0x73, 0x4f, 0x5e, 0xee,
	0x15, 0x00, 0x21, 0xc7, 0x3b, 0x74, 0x3d, 0x9d, 0xe5, 0xf9, 0xde, 0x84, 0xaa, 0xe0, 0xeb, 0x2f,
	0x48, 0xba, 0xac, 0xfe, 0x66, 0x9b, 0x67, 0xbf, 0x0f, 0xd7, 0xa4, 0x3a, 0x7a, 0xf9, 0xae, 0x15,
	0x20, 0xea, 0x58, 0x2e, 0x6c, 0x22, 0x95, 0x61, 0xe9, 0x32, 0x65, 0xd7, 0x32, 0x75, 0x9e, 0xfd,
	0x43, 0x78, 0x26, 0x63, 0xdf, 0x1d, 0x63, 0xff, 0xa4, 0xc7, 0x13, 0xe6, 0x52, 0xc9, 0x8d, 0x1c,
	0x4d, 0x9e, 0xfe, 0x36, 0xd8, 0x62, 0x05, 0x9e, 0x5f, 0x53, 0xbb, 0xf4, 0x6c, 0x9b, 0xdf, 0x72,
	0x1b, 0xd6, 0xf7, 0x31, 0xdd, 0x9d, 0xcc, 0x09, 0xc5, 0x09, 0x8b, 0x3d, 0x04, 0xe9, 0xf3, 0x2d,
	0x3d, 0x1f, 0xf0, 0x08, 0xfe, 0x00, 0x6c, 0xde, 0x3e, 0x7c, 0x1b, 0xdf, 0x4c, 0xfd, 0x40, 0x2b,
	0xec, 0xaf, 0xe5, 0x30, 0x64, 0xa4, 0xbc, 0x82, 0x0f, 0x00, 0xb2, 0x28, 0x8a, 0x2e, 0xf7, 0xcb,
	0xad, 0xf4, 0x2d, 0xe2, 0x72, 0xac, 0x7d, 0x1f, 0xd0, 0x3e, 0xa6, 0x17, 0x23, 0x6a, 0xce, 0xbe,
	0xeb, 0x9a, 0x7d, 0x1a, 0xd3, 0xb0, 0xcc, 0xc9, 0x6f, 0xfd, 0x2b, 0x00, 0x00, 0xff, 0xff, 0xa0,
	0x93, 0x07, 0xf5, 0x02, 0x1e, 0x00, 0x00,
}
